{"version":3,"file":"FacultyCourseApproval-BP_67DFb.js","sources":["../../src/components/FacultyCourseApproval.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport { useAuth } from \"../auth\";\r\n\r\n\r\nconst FacultyCourseApproval = () => {\r\n  const { user } = useAuth();\r\n  const [facultyLoginId, setFacultyLoginId] = useState(null);\r\n  const [year, setYear] = useState(\"\");\r\n  const [section, setSection] = useState(\"\");\r\n  const [semester, setSemester] = useState(\"\");\r\n  const [courses, setCourses] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedStudents, setSelectedStudents] = useState([]);\r\n  const [statusFilter, setStatusFilter] = useState(\"All\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");  // New state for search term\r\n\r\n\r\n  const years = [\r\n    { label: \"I\", value: \"I\" },\r\n    { label: \"II\", value: \"II\" },\r\n    { label: \"III\", value: \"III\" },\r\n    { label: \"IV\", value: \"IV\" },\r\n  ];\r\n  const sections = [\"A\", \"B\", \"C\", \"D\",\"E\",\"F\"];\r\n  const semesters = [\r\n    { label: \"Semester 1\", value: \"sem1\" },\r\n    { label: \"Semester 2\", value: \"sem2\" },\r\n  ];\r\n\r\n\r\n  // Update the facultyLoginId when user logs in\r\n  useEffect(() => {\r\n    if (user) {\r\n      setFacultyLoginId(user.uid);\r\n      console.log(\"Logged in Faculty ID:\", user.uid);\r\n    } else {\r\n      console.error(\"No user logged in!\");\r\n    }\r\n  }, [user]);\r\n\r\n\r\n  // Fetch course data based on year, section, semester, and facultyLoginId\r\n  const fetchData = useCallback(async () => {\r\n    if (!year || !section || !semester || !facultyLoginId) {\r\n      console.log(\"Year, section, semester, or facultyLoginId is missing.\");\r\n      return;\r\n    }\r\n\r\n\r\n    setLoading(true);\r\n    try {\r\n      const noDuesDocRef = doc(db, \"noDues\", year, section, semester);\r\n      const noDuesDocSnap = await getDoc(noDuesDocRef);\r\n\r\n\r\n      if (!noDuesDocSnap.exists()) {\r\n        console.log(\"NoDues document not found for the given year, section, and semester.\");\r\n        setCourses([]);\r\n        return;\r\n      }\r\n\r\n\r\n      const noDuesData = noDuesDocSnap.data();\r\n      console.log(\"Fetched noDues data:\", noDuesData);\r\n\r\n\r\n      if (!noDuesData.students || noDuesData.students.length === 0) {\r\n        console.log(\"No students found for this section.\");\r\n        setCourses([]);\r\n        return;\r\n      }\r\n\r\n\r\n      const studentsData = await Promise.all(\r\n        noDuesData.students.map(async (student) => {\r\n          const courseEntry = student.courses_faculty?.find(\r\n            (cf) => cf.facultyId === facultyLoginId\r\n          );\r\n\r\n\r\n          if (!courseEntry) return null;\r\n\r\n\r\n          let courseName = \"N/A\";\r\n          if (courseEntry.courseId) {\r\n            console.log(\"Fetching course with courseId:\", courseEntry.courseId);\r\n\r\n            const courseRef = doc(\r\n              db,\r\n              \"courses\",\r\n              year,     // Use selected year instead of hardcoded \"III\"\r\n              section,  // Use selected section instead of hardcoded \"A\"\r\n              semester, // Use selected semester instead of hardcoded \"sem1\"\r\n              \"courseDetails\",\r\n              courseEntry.courseId\r\n            );\r\n\r\n            const courseSnap = await getDoc(courseRef);\r\n\r\n            if (courseSnap.exists()) {\r\n              courseName = courseSnap.data()?.courseName || \"N/A\";\r\n              console.log(\"Course fetched:\", courseName);\r\n            } else {\r\n              console.error(\"Course not found for ID:\", courseEntry.courseId);\r\n              console.log(\"Courses Collection Path:\", \"courses\", year, section, semester, \"courseDetails\", courseEntry.courseId);\r\n            }\r\n          }\r\n\r\n\r\n          const studentRef = doc(db, \"students\", year, section, student.id);\r\n          const studentSnap = await getDoc(studentRef);\r\n          const studentData = studentSnap.exists() ? studentSnap.data() : {};\r\n\r\n\r\n          return {\r\n            rollNo: studentData?.rollNo || \"N/A\",\r\n            studentName: studentData?.name || \"N/A\",\r\n            courseName, // Now we have the correct course name\r\n            status: courseEntry.status || \"Pending\",\r\n            studentId: student.id,\r\n            courseEntry,\r\n          };\r\n        })\r\n      );\r\n\r\n\r\n      const filteredData = studentsData.filter((student) => student !== null);\r\n      setCourses(filteredData.sort((a, b) => a.rollNo.localeCompare(b.rollNo)));\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      setCourses([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [year, section, semester, facultyLoginId]);\r\n\r\n\r\n  const updateStatus = async (studentIds, newStatus) => {\r\n    if (!facultyLoginId) {\r\n      console.error(\"Faculty login ID is missing.\");\r\n      return;\r\n    }\r\n\r\n\r\n    try {\r\n      const noDuesDocRef = doc(db, \"noDues\", year, section, semester);\r\n      const noDuesDocSnap = await getDoc(noDuesDocRef);\r\n\r\n\r\n      if (!noDuesDocSnap.exists()) {\r\n        console.log(\"NoDues document not found.\");\r\n        return;\r\n      }\r\n\r\n\r\n      const noDuesData = noDuesDocSnap.data();\r\n\r\n\r\n      if (!noDuesData.students) {\r\n        console.log(\"No students data found.\");\r\n        return;\r\n      }\r\n\r\n\r\n      const updatedStudents = noDuesData.students.map((student) => {\r\n        if (studentIds.includes(student.id)) {\r\n          const updatedCoursesFaculty = student.courses_faculty.map((cf) => {\r\n            if (cf.facultyId === facultyLoginId && cf.courseId) {\r\n              return { ...cf, status: newStatus }; // Update status\r\n            }\r\n            return cf;\r\n          });\r\n\r\n\r\n          return { ...student, courses_faculty: updatedCoursesFaculty };\r\n        }\r\n        return student;\r\n      });\r\n\r\n\r\n      await updateDoc(noDuesDocRef, { students: updatedStudents });\r\n      console.log(\"Status updated successfully!\");\r\n      fetchData(); // Refresh data\r\n    } catch (error) {\r\n      console.error(\"Error updating status:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  const handleCheckboxChange = (studentId) => {\r\n    setSelectedStudents((prevSelected) =>\r\n      prevSelected.includes(studentId)\r\n        ? prevSelected.filter((id) => id !== studentId)\r\n        : [...prevSelected, studentId]\r\n    );\r\n  };\r\n\r\n\r\n  const handleAction = (newStatus) => {\r\n    if (selectedStudents.length > 0) {\r\n      updateStatus(selectedStudents, newStatus);\r\n      setSelectedStudents([]); // Clear selected students after the action\r\n    } else {\r\n      console.log(\"No students selected!\");\r\n    }\r\n  };\r\n\r\n\r\n  // Filter courses based on status and search term\r\n  const filteredCourses = courses\r\n    .filter(\r\n      (student) =>\r\n        (statusFilter === \"All\" || student.status === statusFilter) &&\r\n        (student.rollNo.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n          student.studentName.toLowerCase().includes(searchTerm.toLowerCase()))\r\n    );\r\n\r\n\r\n  useEffect(() => {\r\n    if (year && section && semester && facultyLoginId) {\r\n      fetchData();\r\n    }\r\n  }, [year, section, semester, facultyLoginId, fetchData]);\r\n\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 p-4 flex flex-col items-center\">\r\n      <h1 className=\"text-2xl md:text-3xl font-bold text-gray-800 mb-6\">\r\n        Faculty Courses Dashboard\r\n      </h1>\r\n      <div className=\"w-full max-w-4xl bg-white shadow-md rounded-lg p-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\r\n          <div>\r\n            <label className=\"block text-gray-700 font-medium mb-2\">Year:</label>\r\n            <select\r\n              value={year}\r\n              onChange={(e) => setYear(e.target.value)}\r\n              className=\"w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"\">Select Year</option>\r\n              {years.map((yr) => (\r\n                <option key={yr.value} value={yr.value}>\r\n                  {yr.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-gray-700 font-medium mb-2\">Section:</label>\r\n            <select\r\n              value={section}\r\n              onChange={(e) => setSection(e.target.value)}\r\n              className=\"w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"\">Select Section</option>\r\n              {sections.map((sec) => (\r\n                <option key={sec} value={sec}>\r\n                  {sec}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"block text-gray-700 font-medium mb-2\">Semester:</label>\r\n            <select\r\n              value={semester}\r\n              onChange={(e) => setSemester(e.target.value)}\r\n              className=\"w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"\">Select Semester</option>\r\n              {semesters.map((sem) => (\r\n                <option key={sem.value} value={sem.value}>\r\n                  {sem.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        {/* Search input */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 font-medium mb-2\">Search:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            placeholder=\"Search by Roll No or Name\"\r\n            className=\"w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          />\r\n        </div>\r\n\r\n\r\n        {/* Status Filter */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 font-medium mb-2\">Status Filter:</label>\r\n          <select\r\n            value={statusFilter}\r\n            onChange={(e) => setStatusFilter(e.target.value)}\r\n            className=\"w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"All\">All</option>\r\n            <option value=\"Accepted\">Accepted</option>\r\n            <option value=\"Rejected\">Rejected</option>\r\n          </select>\r\n        </div>\r\n\r\n\r\n        {/* Table Display */}\r\n        {loading ? (\r\n          <div>Loading...</div>\r\n        ) : (\r\n          <table className=\"min-w-full table-auto\">\r\n            <thead>\r\n              <tr className=\"bg-gray-100\">\r\n                <th className=\"py-2 px-4 text-left\">Action</th>\r\n                <th className=\"py-2 px-4 text-left\">Roll No</th>\r\n                <th className=\"py-2 px-4 text-left\">Student Name</th>\r\n                <th className=\"py-2 px-4 text-left\">Course Name</th>\r\n                <th className=\"py-2 px-4 text-left\">Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredCourses.map((student, index) => (\r\n                <tr\r\n                  key={index}\r\n                  className={`${\r\n                    index % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"\r\n                  } hover:bg-gray-100`}\r\n                >\r\n                  <td className=\"py-2 px-4\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={selectedStudents.includes(student.studentId)}\r\n                      onChange={() => handleCheckboxChange(student.studentId)}\r\n                    />\r\n                  </td>\r\n                  <td className=\"py-2 px-4\">{student.rollNo}</td>\r\n                  <td className=\"py-2 px-4\">{student.studentName}</td>\r\n                  <td className=\"py-2 px-4\">{student.courseName}</td>\r\n                  <td className=\"py-2 px-4\">{student.status}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        )}\r\n\r\n\r\n        {/* Accept/Reject buttons */}\r\n        <div className=\"mt-4\">\r\n          <button\r\n            onClick={() => handleAction(\"Accepted\")}\r\n            className=\"px-6 py-2 text-white bg-green-500 rounded-md hover:bg-green-600 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-opacity-50\"\r\n          >\r\n            Accept\r\n          </button>\r\n          <button\r\n            onClick={() => handleAction(\"Rejected\")}\r\n            className=\"ml-4 px-6 py-2 text-white bg-red-500 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-opacity-50\"\r\n          >\r\n            Reject\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default FacultyCourseApproval;\r\n"],"names":["FacultyCourseApproval","user","useAuth","facultyLoginId","setFacultyLoginId","useState","year","setYear","section","setSection","semester","setSemester","courses","setCourses","loading","setLoading","selectedStudents","setSelectedStudents","statusFilter","setStatusFilter","searchTerm","setSearchTerm","years","sections","semesters","useEffect","fetchData","useCallback","noDuesDocRef","doc","db","noDuesDocSnap","getDoc","noDuesData","filteredData","student","courseEntry","cf","courseName","courseRef","courseSnap","studentRef","studentSnap","studentData","a","b","error","updateStatus","studentIds","newStatus","updatedStudents","updatedCoursesFaculty","updateDoc","handleCheckboxChange","studentId","prevSelected","id","handleAction","filteredCourses","jsxs","jsx","e","yr","sec","sem","index"],"mappings":"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"}