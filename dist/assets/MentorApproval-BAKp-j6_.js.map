{"version":3,"file":"MentorApproval-BAKp-j6_.js","sources":["../../src/components/MentorApproval.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\"; // Firestore configuration\r\nimport { useAuth } from \"../auth\"; // Authentication hook to get logged-in mentor\r\n\r\n\r\nconst MentorApproval = () => {\r\n  const { user } = useAuth(); // Get the logged-in user\r\n  const [mentors, setMentors] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [year, setYear] = useState(\"\");\r\n  const [section, setSection] = useState(\"\");\r\n  const [semester, setSemester] = useState(\"\"); // New state for semester\r\n\r\n\r\n  const loggedInMentorId = user?.uid; // Mentor ID from authentication\r\n\r\n\r\n  const years = [\r\n    { label: \"I\", value: \"I\" },\r\n    { label: \"II\", value: \"II\" },\r\n    { label: \"III\", value: \"III\" },\r\n    { label: \"IV\", value: \"IV\" },\r\n  ];\r\n  const sections = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\r\n  const semesters = [\r\n    { label: \"Semester 1\", value: \"sem1\" },\r\n    { label: \"Semester 2\", value: \"sem2\" },\r\n  ];\r\n\r\n\r\n  useEffect(() => {\r\n    if (loggedInMentorId) {\r\n      console.log(\"Logged in Mentor ID:\", loggedInMentorId);\r\n    } else {\r\n      console.error(\"No logged-in Mentor ID found!\");\r\n    }\r\n  }, [loggedInMentorId]);\r\n\r\n\r\n  const fetchNameById = async (collectionName, id) => {\r\n    // If fetching from faculty, use nested path faculty/CSE_DS/members/{id}\r\n    const docRef = collectionName === 'faculty'\r\n      ? doc(db, 'faculty', 'CSE_DS', 'members', id)\r\n      : doc(db, collectionName, id);\r\n    const docSnap = await getDoc(docRef);\r\n    return docSnap.exists() ? docSnap.data().name || \"Unknown\" : \"Unknown\";\r\n  };\r\n\r\n\r\n  const fetchData = useCallback(async () => {\r\n    if (!loggedInMentorId || !year || !section || !semester) {\r\n      console.error(\"Mentor ID, year, section, or semester is required.\");\r\n      return;\r\n    }\r\n \r\n    setLoading(true);\r\n    try {\r\n      // Define the path dynamically for the noDues document\r\n      const noDuesPath = `noDues/${year}/${section}/${semester}`;\r\n      const noDuesDocRef = doc(db, noDuesPath);\r\n \r\n      // Get the noDues document snapshot\r\n      const docSnap = await getDoc(noDuesDocRef);\r\n      if (!docSnap.exists()) {\r\n        console.error(\"No noDues document found.\");\r\n        setMentors([]);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n \r\n      // Retrieve data from the document\r\n      const noDuesData = docSnap.data();\r\n      console.log(\"Fetched NoDues Data:\", noDuesData);\r\n \r\n      // Check if students exist\r\n      if (!noDuesData.students || noDuesData.students.length === 0) {\r\n        console.log(\"No students found.\");\r\n        setMentors([]);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n \r\n      // Process each student to fetch additional details\r\n      const fetchedMentors = await Promise.all(\r\n        noDuesData.students.map(async (student) => {\r\n          try {\r\n            const mentors = student?.mentors || [];\r\n            const matchedMentor = mentors.find((mentor) => mentor?.id === loggedInMentorId);\r\n \r\n            if (matchedMentor) {\r\n              // Fetch student document safely\r\n              const studentRef = doc(db, `students/${year}/${section}`, student.id);\r\n              const studentSnap = await getDoc(studentRef);\r\n \r\n              // Fetch mentor name safely\r\n              const mentorName = matchedMentor.id\r\n                ? await fetchNameById(\"faculty\", matchedMentor.id)\r\n                : \"Unknown\";\r\n \r\n              // Check if the student document exists\r\n              if (studentSnap.exists()) {\r\n                const studentData = studentSnap.data();\r\n \r\n                // Safely process coordinators\r\n                const coordinators = Array.isArray(student.coordinators)\r\n                  ? await Promise.all(\r\n                      student.coordinators.map(async (coordinator) => ({\r\n                        ...coordinator,\r\n                        name: coordinator?.id\r\n                          ? await fetchNameById(\"faculty\", coordinator.id)\r\n                          : \"Unknown\",\r\n                      }))\r\n                    )\r\n                  : [];\r\n \r\n                // Safely process courses_faculty\r\n                const coursesFaculty = Array.isArray(student.courses_faculty)\r\n                  ? await Promise.all(\r\n                      student.courses_faculty.map(async (courseFaculty) => ({\r\n                        ...courseFaculty,\r\n                        courseName: courseFaculty?.courseId\r\n                          ? await fetchNameById(\r\n                              `courses/${year}/${section}/${semester}/courseDetails`,\r\n                              courseFaculty.courseId\r\n                            )\r\n                          : \"Unknown\",\r\n                        facultyName: courseFaculty?.facultyId\r\n                          ? await fetchNameById(\"faculty\", courseFaculty.facultyId)\r\n                          : \"Unknown\",\r\n                      }))\r\n                    )\r\n                  : [];\r\n \r\n                return {\r\n                  rollNo: studentData?.rollNo || \"N/A\",\r\n                  studentName: studentData?.name || \"N/A\",\r\n                  mentorName,\r\n                  status: matchedMentor?.status || \"Pending\",\r\n                  studentId: student.id,\r\n                  mentorIndex: mentors.indexOf(matchedMentor),\r\n                  coordinators,\r\n                  coursesFaculty,\r\n                };\r\n              } else {\r\n                console.warn(`Student document not found for ID: ${student.id}`);\r\n              }\r\n            }\r\n          } catch (err) {\r\n            console.error(`Error processing student ${student.id}:`, err);\r\n          }\r\n          return null;\r\n        })\r\n      );\r\n \r\n      // Update the state with fetched data\r\n      setMentors(fetchedMentors.filter(Boolean)); // Remove null values\r\n    } catch (error) {\r\n      console.error(\"Error fetching NoDues data:\", error);\r\n      setMentors([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [loggedInMentorId, year, section, semester]);\r\n\r\n  const updateStatus = async (studentId, mentorIndex, newStatus) => {\r\n      try {\r\n        // Define the path dynamically for the latest noDues document\r\n        const noDuesPath = `noDues/${year}/${section}/${semester}`;\r\n        const noDuesDocRef = doc(db, noDuesPath);\r\n   \r\n        // Get the latest noDues document snapshot\r\n        const docSnap = await getDoc(noDuesDocRef);\r\n        if (!docSnap.exists()) {\r\n          console.error(\"No noDues document found for updating.\");\r\n          return;\r\n        }\r\n   \r\n        // Retrieve data from the document\r\n        const noDuesData = docSnap.data();\r\n   \r\n        // Update the specific student's mentor status\r\n        const updatedStudents = noDuesData.students.map((student) => {\r\n          if (student.id === studentId) {\r\n            const updatedMentors = student.mentors.map((mentor, index) => {\r\n              if (index === mentorIndex) {\r\n                return { ...mentor, status: newStatus };\r\n              }\r\n              return mentor;\r\n            });\r\n            return { ...student, mentors: updatedMentors };\r\n          }\r\n          return student;\r\n        });\r\n   \r\n        // Update the document in Firestore\r\n        await updateDoc(noDuesDocRef, { students: updatedStudents });\r\n        console.log(\"Mentor status updated successfully!\");\r\n   \r\n        // Refresh the data\r\n        fetchData();\r\n      } catch (error) {\r\n        console.error(\"Error updating mentor status:\", error);\r\n      }\r\n    };\r\n   \r\n\r\n\r\n  useEffect(() => {\r\n    if (loggedInMentorId && year && section && semester) {\r\n      fetchData();\r\n    }\r\n  }, [loggedInMentorId, year, section, semester, fetchData]);\r\n\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex flex-col items-center p-6\">\r\n      <h1 className=\"text-2xl font-semibold text-gray-900 mb-4\">Mentor Approval</h1>\r\n\r\n\r\n      {/* Filters Section */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 w-full max-w-4xl mb-4\">\r\n        <div>\r\n          <label className=\"block text-gray-700 font-semibold mb-2\">Year:</label>\r\n          <select\r\n            value={year}\r\n            onChange={(e) => setYear(e.target.value)}\r\n            className=\"w-full px-3 py-2 border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"\">Select Year</option>\r\n            {years.map((yr) => (\r\n              <option key={yr.value} value={yr.value}>\r\n                {yr.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-gray-700 font-semibold mb-2\">Section:</label>\r\n          <select\r\n            value={section}\r\n            onChange={(e) => setSection(e.target.value)}\r\n            className=\"w-full px-3 py-2 border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"\">Select Section</option>\r\n            {sections.map((sec) => (\r\n              <option key={sec} value={sec}>\r\n                {sec}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label className=\"block text-gray-700 font-semibold mb-2\">Semester:</label>\r\n          <select\r\n            value={semester}\r\n            onChange={(e) => setSemester(e.target.value)}\r\n            className=\"w-full px-3 py-2 border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          >\r\n            <option value=\"\">Select Semester</option>\r\n            {semesters.map((sem) => (\r\n              <option key={sem.value} value={sem.value}>\r\n                {sem.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {/* Loading Spinner */}\r\n      {loading ? (\r\n        <div className=\"flex justify-center items-center\">\r\n          <div className=\"loader ease-linear rounded-full border-4 border-t-4 border-gray-200 h-12 w-12\"></div>\r\n          <p className=\"ml-4 text-blue-600 font-medium\">Loading...</p>\r\n        </div>\r\n      ) : (\r\n        /* Table Section */\r\n        <div className=\"overflow-x-auto w-full max-w-4xl\">\r\n          <table className=\"table-auto w-full border-collapse border border-gray-300 text-sm\">\r\n            <thead>\r\n              <tr className=\"bg-gray-100\">\r\n                <th className=\"px-2 py-2 border text-left font-semibold\">Roll No</th>\r\n                <th className=\"px-2 py-2 border text-left font-semibold\">Student Name</th>\r\n                <th className=\"px-2 py-2 border text-left font-semibold\">Mentor</th>\r\n                <th className=\"px-2 py-2 border text-left font-semibold\">Status</th>\r\n                <th className=\"px-2 py-2 border text-left font-semibold\">Coordinators</th>\r\n                <th className=\"px-2 py-2 border text-left font-semibold\">Courses Faculty</th>\r\n                <th className=\"px-2 py-2 border text-left font-semibold\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {mentors.length === 0 ? (\r\n                <tr>\r\n                  <td colSpan=\"7\" className=\"px-4 py-2 text-center text-gray-500\">\r\n                    No data available\r\n                  </td>\r\n                </tr>\r\n              ) : (\r\n                mentors.map((mentor, index) => {\r\n                  const allAccepted = mentor.coordinators.every((c) => c.status === \"Accepted\") &&\r\n                                      mentor.coursesFaculty.every((cf) => cf.status === \"Accepted\");\r\n                  return (\r\n                    <tr key={index} className=\"hover:bg-gray-50 transition\">\r\n                      <td className=\"px-2 py-2 border\">{mentor.rollNo}</td>\r\n                      <td className=\"px-2 py-2 border\">{mentor.studentName}</td>\r\n                      <td className=\"px-2 py-2 border\">{mentor.mentorName}</td>\r\n                      <td className=\"px-2 py-2 border\">\r\n                        <span\r\n                          className={`px-2 py-1 rounded-full text-xs text-white ${\r\n                            mentor.status === \"Accepted\"\r\n                              ? \"bg-green-500\"\r\n                              : mentor.status === \"Rejected\"\r\n                              ? \"bg-red-500\"\r\n                              : \"bg-yellow-500\"\r\n                          }`}\r\n                        >\r\n                          {mentor.status}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-2 py-2 border\">\r\n                        {mentor.coordinators?.length > 0 ? (\r\n                          mentor.coordinators.map((coordinator, i) => (\r\n                            <span\r\n                              key={i}\r\n                              className={`inline-block px-2 py-1 rounded-full text-[11px] font-medium text-white ${\r\n                                coordinator.status === \"Accepted\"\r\n                                  ? \"bg-green-500\"\r\n                                  : coordinator.status === \"Rejected\"\r\n                                  ? \"bg-red-500\"\r\n                                  : \"bg-yellow-500\"\r\n                              } mr-1`}\r\n                            >\r\n                              {coordinator.name}\r\n                            </span>\r\n                          ))\r\n                        ) : (\r\n                          <span className=\"text-gray-500\">No Coordinators</span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"px-2 py-2 border\">\r\n                        {mentor.coursesFaculty?.length > 0 ? (\r\n                          mentor.coursesFaculty.map((courseFaculty, i) => (\r\n                            <span\r\n                              key={i}\r\n                              className={`inline-block px-2 py-1 rounded-full text-[11px] font-medium text-white ${\r\n                                courseFaculty.status === \"Accepted\"\r\n                                  ? \"bg-green-500\"\r\n                                  : courseFaculty.status === \"Rejected\"\r\n                                  ? \"bg-red-500\"\r\n                                  : \"bg-yellow-500\"\r\n                              } mr-1`}\r\n                            >\r\n                              {courseFaculty.facultyName}\r\n                            </span>\r\n                          ))\r\n                        ) : (\r\n                          <span className=\"text-gray-500\">No Courses</span>\r\n                        )}\r\n                      </td>\r\n                      <td className=\"px-2 py-2 border\">\r\n                        <button\r\n                          className={`bg-green-600 text-white px-3 py-1 rounded-md mr-2 text-sm ${\r\n                            !allAccepted ? \"opacity-50 cursor-not-allowed\" : \"\"\r\n                          }`}\r\n                          onClick={() =>\r\n                            updateStatus(mentor.studentId, mentor.mentorIndex, \"Accepted\")\r\n                          }\r\n                          disabled={!allAccepted}\r\n                        >\r\n                          Accept\r\n                        </button>\r\n                        <button\r\n                          className={`bg-red-600 text-white px-3 py-1 rounded-md text-sm ${\r\n                            !allAccepted ? \"opacity-50 cursor-not-allowed\" : \"\"\r\n                          }`}\r\n                          onClick={() =>\r\n                            updateStatus(mentor.studentId, mentor.mentorIndex, \"Rejected\")\r\n                          }\r\n                          disabled={!allAccepted}\r\n                        >\r\n                          Reject\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default MentorApproval;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["MentorApproval","user","useAuth","mentors","setMentors","useState","loading","setLoading","year","setYear","section","setSection","semester","setSemester","loggedInMentorId","years","sections","semesters","useEffect","fetchNameById","collectionName","id","docRef","doc","db","docSnap","getDoc","fetchData","useCallback","noDuesPath","noDuesDocRef","noDuesData","fetchedMentors","student","matchedMentor","mentor","studentRef","studentSnap","mentorName","studentData","coordinators","coordinator","coursesFaculty","courseFaculty","err","error","updateStatus","studentId","mentorIndex","newStatus","updatedStudents","updatedMentors","index","updateDoc","jsxs","jsx","e","yr","sec","sem","allAccepted","c","cf","i"],"mappings":"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"}