{"version":3,"file":"StudentList-BqnGFOXH.js","sources":["../../src/components/StudentList.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback, useRef } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { auth, db } from \"../firebase\";\nimport { \n  collection, \n  doc, \n  getDoc, \n  getDocs, \n  query, \n  where, \n  collectionGroup,\n  documentId \n} from 'firebase/firestore';\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { \n  faUsers, \n  faFilter, \n  faSearch, \n  faExclamationTriangle, \n  faUserGraduate, \n  faChalkboardTeacher,\n  faClock,\n  faCheckCircle,\n  faEnvelope,\n  faGraduationCap,\n  faIdCard,\n  faArrowRight,\n  faSync,\n  faRocket,\n  faArrowLeft,\n  faBuilding\n} from '@fortawesome/free-solid-svg-icons';\n\n// Ultra-fast cache management\nconst CACHE_KEY = \"studentsCache_v2\";\nconst CACHE_TIMESTAMP_KEY = \"studentsCacheTimestamp\";\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\n\nconst StudentList = () => {\n  const [students, setStudents] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortOption, setSortOption] = useState(\"name\");\n  const [loading, setLoading] = useState(false); // Start with false for instant display\n  const [error, setError] = useState(null);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [loadTime, setLoadTime] = useState(0);\n  const [facultyData, setFacultyData] = useState(null);\n  const [instructorCourses, setInstructorCourses] = useState([]);\n  const [showCourseDetails, setShowCourseDetails] = useState(false);\n  \n  const navigate = useNavigate();\n\n  // Performance tracking\n  const startTime = useRef(Date.now());\n  const dataFetched = useRef(false);\n\n  // Instant cache retrieval - runs synchronously\n  const getCachedData = useCallback(() => {\n    try {\n      const cached = localStorage.getItem(CACHE_KEY);\n      const timestamp = localStorage.getItem(CACHE_TIMESTAMP_KEY);\n      \n      if (cached && timestamp) {\n        const age = Date.now() - parseInt(timestamp);\n        if (age < CACHE_DURATION) {\n          const parsed = JSON.parse(cached);\n          if (Array.isArray(parsed) && parsed.length > 0) {\n            return parsed;\n          }\n        }\n      }\n    } catch (error) {\n      console.log(\"Cache read failed:\", error);\n    }\n    return null;\n  }, []);\n\n  // Simple and direct data fetching\n  const fetchDataUltraFast = useCallback(async (user) => {\n    if (!user || dataFetched.current) {\n      console.log(\"❌ Data already fetched, skipping\");\n      return;\n    }\n\n    console.log(\"🚀 Starting simple data fetch for user:\", user.uid);\n    const startTime = Date.now();\n    setLoading(true);\n    setError(null);\n    dataFetched.current = true;\n\n    try {\n      // Step 1: Get faculty data to get authUid\n      console.log(\"🔍 Step 1: Getting faculty data...\");\n      let facultyData = null;\n      const facultyRef = doc(db, 'faculty', 'CSE_DS', 'members', user.uid);\n      const facultySnap = await getDoc(facultyRef);\n      \n      if (facultySnap.exists()) {\n        facultyData = facultySnap.data();\n        setFacultyData(facultyData);\n        console.log(\"✅ Faculty found:\", facultyData.name, \"authUid:\", facultyData.authUid);\n      } else {\n        console.log(\"❌ Faculty not found, using user.uid as instructor\");\n        facultyData = { authUid: user.uid, name: user.email, department: 'Unknown' };\n        setFacultyData(facultyData);\n      }\n\n      const instructorId = facultyData.authUid;\n      console.log(\"🎯 Looking for courses where instructor =\", instructorId);\n\n      // Step 2: Find all courses where instructor matches\n      console.log(\"🔍 Step 2: Finding instructor courses...\");\n      const instructorCourseList = [];\n      \n      // Use collectionGroup to search all courseDetails\n      const courseDetailsQuery = collectionGroup(db, 'courseDetails');\n      const courseDetailsSnap = await getDocs(courseDetailsQuery);\n      \n      console.log(`📚 Found ${courseDetailsSnap.docs.length} total courses`);\n      \n      for (const courseDoc of courseDetailsSnap.docs) {\n        const courseData = courseDoc.data();\n        const courseId = courseDoc.id;\n        \n        console.log(`🔍 Course: ${courseData.courseName}, Instructor: ${courseData.instructor}`);\n        \n        if (courseData.instructor === instructorId) {\n          console.log(`✅ Match found! Course: ${courseData.courseName}`);\n          instructorCourseList.push({\n            id: courseId,\n            courseName: courseData.courseName,\n            courseCode: courseData.courseCode,\n            instructor: courseData.instructor,\n            studentsBySection: courseData.studentsBySection,\n            students: courseData.students || [],\n            year: courseData.displayYear?.split('_')[0] || 'III',\n            section: courseData.displaySection || 'All',\n            semester: courseData.displaySemester || '5',\n            credits: courseData.credits || 3\n          });\n        }\n      }\n\n      setInstructorCourses(instructorCourseList);\n      console.log(`👨‍🏫 Found ${instructorCourseList.length} instructor courses`);\n\n      // Step 3: Get all students from instructor courses\n      console.log(\"🔍 Step 3: Getting students from instructor courses...\");\n      const allStudentIds = new Set();\n      const courseStudentMap = new Map();\n\n      instructorCourseList.forEach(course => {\n        console.log(`📚 Processing course: ${course.courseName}`);\n        \n        // Get students from studentsBySection\n        if (course.studentsBySection && typeof course.studentsBySection === 'object') {\n          Object.entries(course.studentsBySection).forEach(([section, studentIds]) => {\n            if (Array.isArray(studentIds)) {\n              console.log(`   Section ${section}: ${studentIds.length} students`);\n              studentIds.forEach(studentId => {\n                allStudentIds.add(studentId);\n                if (!courseStudentMap.has(studentId)) {\n                  courseStudentMap.set(studentId, []);\n                }\n                courseStudentMap.get(studentId).push({\n                  courseName: course.courseName,\n                  courseCode: course.courseCode,\n                  section: section,\n                  semester: course.semester,\n                  year: course.year\n                });\n              });\n            }\n          });\n        }\n        \n        // Also check direct students array\n        if (course.students && Array.isArray(course.students)) {\n          console.log(`   Direct students: ${course.students.length} students`);\n          course.students.forEach(studentId => {\n            allStudentIds.add(studentId);\n            if (!courseStudentMap.has(studentId)) {\n              courseStudentMap.set(studentId, []);\n            }\n            courseStudentMap.get(studentId).push({\n              courseName: course.courseName,\n              courseCode: course.courseCode,\n              section: course.section,\n              semester: course.semester,\n              year: course.year\n            });\n          });\n        }\n      });\n\n      const uniqueStudentIds = Array.from(allStudentIds);\n      console.log(`📚 Found ${uniqueStudentIds.length} unique students from instructor courses`);\n      console.log(\"🔍 uniqueStudentIds type:\", typeof uniqueStudentIds);\n      console.log(\"🔍 uniqueStudentIds is Array:\", Array.isArray(uniqueStudentIds));\n      console.log(\"🔍 Sample student IDs:\", uniqueStudentIds.slice(0, 5));\n\n      // Convert back to Set for efficient lookup\n      const uniqueStudentIdsSet = new Set(uniqueStudentIds);\n      console.log(\"🔍 uniqueStudentIdsSet is Set:\", uniqueStudentIdsSet instanceof Set);\n      console.log(\"🔍 uniqueStudentIdsSet size:\", uniqueStudentIdsSet.size);\n\n      // Step 4: Fetch student details\n      console.log(\"🔍 Step 4: Fetching student details...\");\n      const fetchedStudents = [];\n      \n      // Try common student paths\n      const studentPaths = [\n        ['students', 'CSEDS', 'III-A'],\n        ['students', 'CSEDS', 'III-B'],\n        ['students', 'CSEDS', 'III-C'],\n        ['students', 'CSE_DS', 'III_A'],\n        ['students', 'CSE_DS', 'III_B'],\n        ['students', 'CSE_DS', 'III_C'],\n      ];\n\n      for (const pathSegments of studentPaths) {\n        try {\n          const studentsRef = collection(db, ...pathSegments);\n          const studentsSnap = await getDocs(studentsRef);\n          console.log(`📚 Found ${studentsSnap.docs.length} students in ${pathSegments.join('/')}`);\n          fetchedStudents.push(...studentsSnap.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n        } catch (error) {\n          console.log(`❌ Failed to fetch from ${pathSegments.join('/')}`);\n        }\n      }\n\n      // Step 5: Filter and map students\n      const instructorStudents = fetchedStudents\n        .filter(student => {\n          // Ensure uniqueStudentIds is a Set and student.id exists\n          if (!uniqueStudentIdsSet || !(uniqueStudentIdsSet instanceof Set)) {\n            console.log(\"❌ uniqueStudentIdsSet is not a valid Set:\", uniqueStudentIdsSet);\n            return false;\n          }\n          if (!student || !student.id) {\n            console.log(\"❌ Student or student.id is missing:\", student);\n            return false;\n          }\n          return uniqueStudentIdsSet.has(student.id);\n        })\n        .map(student => ({\n          ...student,\n          enrolledCourses: courseStudentMap.get(student.id) || [],\n          totalCourses: (courseStudentMap.get(student.id) || []).length\n        }));\n\n      console.log(`✅ Found ${instructorStudents.length} instructor students`);\n\n      // If no instructor students found, show all students as fallback\n      if (instructorStudents.length === 0) {\n        console.log(\"⚠️ No instructor students found, showing all students\");\n        const allStudents = fetchedStudents.map(student => ({\n          ...student,\n          enrolledCourses: [],\n          totalCourses: 0\n        }));\n        setStudents(allStudents);\n      } else {\n        setStudents(instructorStudents);\n      }\n\n      const loadTime = Date.now() - startTime;\n      setLoadTime(loadTime);\n      console.log(`🚀 Data loaded in ${loadTime}ms`);\n\n    } catch (error) {\n      console.error(\"Data fetch failed:\", error);\n      setError(\"Failed to load data. Please try again.\");\n      dataFetched.current = false;\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Instant display from cache, then background refresh\n  useEffect(() => {\n    const cachedData = getCachedData();\n    if (cachedData) {\n      setStudents(cachedData);\n      setLoading(false);\n      // Start background refresh\n      setIsRefreshing(true);\n    } else {\n      setLoading(true);\n    }\n  }, [getCachedData]);\n\n  // Background data fetching\n  useEffect(() => {\n    let unsubscribe;\n    \n    const initializeData = async () => {\n      unsubscribe = onAuthStateChanged(auth, async (user) => {\n        if (!user) {\n          setError(\"No user is logged in.\");\n          setLoading(false);\n          setIsRefreshing(false);\n          return;\n        }\n\n        // If we have cached data, refresh in background\n        if (students.length > 0) {\n          fetchDataUltraFast(user);\n        } else {\n          // No cache, fetch immediately\n          await fetchDataUltraFast(user);\n        }\n      });\n    };\n\n    initializeData();\n    return () => {\n      if (unsubscribe) unsubscribe();\n    };\n  }, [fetchDataUltraFast, students.length]);\n\n  // Optimized filtering and sorting\n  const filteredStudents = useMemo(() => {\n    let base = students;\n    \n    // Apply search filter\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      base = base.filter(student =>\n        (student.name || '').toLowerCase().includes(term) ||\n        (student.email || '').toLowerCase().includes(term) ||\n        (student.rollNo || '').toLowerCase().includes(term)\n      );\n    }\n    \n    // Apply sorting\n    return base.sort((a, b) => {\n      if (sortOption === \"name\") {\n        return (a.name || '').localeCompare(b.name || '');\n      }\n      return 0;\n    });\n  }, [students, searchTerm, sortOption]);\n\n  // Force refresh function\n  const handleRefresh = useCallback(async () => {\n    console.log(\"🔄 Manual refresh triggered\");\n    setIsRefreshing(true);\n    dataFetched.current = false; // Reset the flag to allow fresh data fetch\n    \n    // Clear cache\n    try {\n      localStorage.removeItem(CACHE_KEY);\n      localStorage.removeItem(CACHE_TIMESTAMP_KEY);\n      console.log(\"🗑️ Cache cleared\");\n    } catch (error) {\n      console.log(\"Cache clear failed:\", error);\n    }\n    \n    const user = auth.currentUser;\n    if (user) {\n      console.log(\"🔄 Starting fresh data fetch for user:\", user.uid);\n      await fetchDataUltraFast(user);\n    } else {\n      console.log(\"❌ No user found for refresh\");\n      setIsRefreshing(false);\n    }\n  }, [fetchDataUltraFast]);\n\n  if (loading && students.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 p-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"mb-12 animate-fade-in\">\n            <div className=\"h-16 bg-gray-200 rounded-2xl mb-6 animate-pulse\"></div>\n            <div className=\"h-8 bg-gray-200 rounded-xl w-1/3 animate-pulse\"></div>\n          </div>\n          <div className=\"grid gap-8 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\n            {Array.from({ length: 9 }).map((_, i) => (\n              <div key={i} className=\"bg-white rounded-2xl shadow-xl p-8 animate-fade-in border border-gray-100\" style={{ animationDelay: `${i * 50}ms` }}>\n                <div className=\"flex items-center mb-6\">\n                  <div className=\"w-20 h-20 bg-gray-200 rounded-full mr-6 animate-pulse\"></div>\n                  <div className=\"flex-1\">\n                    <div className=\"h-6 bg-gray-200 rounded w-3/4 mb-3 animate-pulse\"></div>\n                    <div className=\"h-4 bg-gray-200 rounded w-1/2 animate-pulse\"></div>\n                  </div>\n                </div>\n                <div className=\"space-y-3 mb-6\">\n                  <div className=\"h-4 bg-gray-200 rounded animate-pulse\"></div>\n                  <div className=\"h-4 bg-gray-200 rounded w-2/3 animate-pulse\"></div>\n                  <div className=\"h-4 bg-gray-200 rounded w-1/2 animate-pulse\"></div>\n                </div>\n                <div className=\"flex gap-3 mb-6\">\n                  <div className=\"h-8 w-20 bg-gray-200 rounded-full animate-pulse\"></div>\n                  <div className=\"h-8 w-24 bg-gray-200 rounded-full animate-pulse\"></div>\n                </div>\n                <div className=\"h-6 w-24 bg-gray-200 rounded animate-pulse\"></div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error && students.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 flex items-center justify-center p-8\">\n        <div className=\"bg-white rounded-2xl shadow-xl p-12 text-center border border-gray-100\">\n          <FontAwesomeIcon icon={faExclamationTriangle} className=\"text-blue-600 text-6xl mb-6 animate-bounce\" />\n          <div className=\"text-gray-800 text-xl font-semibold mb-6\">{error}</div>\n          <button\n            onClick={handleRefresh}\n            className=\"btn-campus-primary inline-flex items-center gap-3 px-8 py-4 rounded-xl shadow-lg transition-all duration-300 text-lg font-medium\"\n          >\n            <FontAwesomeIcon icon={faSync} />\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n    return (\n    <div className=\"min-h-screen bg-gray-50 p-6\">\n      <div className=\"page-container\">\n        \n        {/* Instructor Summary Section */}\n        {facultyData && (\n          <div className=\"compact-card mb-6\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-4\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center\">\n                  <FontAwesomeIcon icon={faChalkboardTeacher} className=\"text-blue-600 text-xl\" />\n                </div>\n                <div>\n                  <h2 className=\"text-lg font-semibold text-gray-900\">{facultyData.name}</h2>\n                  <p className=\"text-sm text-gray-600\">{facultyData.designation} • {facultyData.department}</p>\n                  {instructorCourses.length > 0 ? (\n                    <p className=\"text-xs text-gray-500\">Teaching {instructorCourses.length} course{instructorCourses.length !== 1 ? 's' : ''}</p>\n                  ) : (\n                    <p className=\"text-xs text-orange-600\">No instructor courses found for this semester</p>\n                  )}\n                </div>\n              </div>\n              <div className=\"text-right\">\n                <div className=\"text-2xl font-bold text-blue-600\">{instructorCourses.length}</div>\n                <div className=\"text-xs text-gray-500\">Active Courses</div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Instructor Course Details Section */}\n        {instructorCourses.length > 0 ? (\n          <div className=\"compact-card mb-6\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <div className=\"flex items-center gap-3\">\n                <FontAwesomeIcon icon={faChalkboardTeacher} className=\"text-blue-600 text-xl\" />\n                <h2 className=\"text-lg font-semibold text-gray-900\">Your Teaching Courses</h2>\n                <span className=\"bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded-full\">\n                  {instructorCourses.length} course{instructorCourses.length !== 1 ? 's' : ''}\n                </span>\n              </div>\n              <button\n                onClick={() => setShowCourseDetails(!showCourseDetails)}\n                className=\"text-blue-600 hover:text-blue-700 text-sm font-medium flex items-center gap-2\"\n              >\n                {showCourseDetails ? 'Hide Details' : 'Show Details'}\n                <FontAwesomeIcon icon={showCourseDetails ? faArrowLeft : faArrowRight} className=\"text-xs\" />\n              </button>\n            </div>\n            \n            {showCourseDetails && (\n              <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n                {instructorCourses.map((course, index) => (\n                  <div\n                    key={course.id}\n                    className=\"bg-gradient-to-br from-blue-50 to-indigo-50 rounded-lg border border-blue-200 p-4 hover:shadow-md transition-all duration-200\"\n                    style={{ animationDelay: `${index * 100}ms` }}\n                  >\n                    <div className=\"flex items-start justify-between mb-3\">\n                      <div className=\"flex-1\">\n                        <h3 className=\"font-semibold text-gray-900 text-sm mb-1\">{course.courseName}</h3>\n                        <p className=\"text-xs text-gray-600 mb-2\">{course.courseCode}</p>\n                        <div className=\"flex items-center gap-2 text-xs text-gray-600\">\n                          <FontAwesomeIcon icon={faGraduationCap} className=\"text-blue-600\" />\n                          <span>{course.year} Year - {course.section} Section</span>\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <span className=\"bg-blue-100 text-blue-800 text-xs font-medium px-2 py-1 rounded-full\">\n                          {course.credits || 3} Credits\n                        </span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"space-y-2 mb-3\">\n                      <div className=\"flex items-center gap-2 text-xs text-gray-600\">\n                        <FontAwesomeIcon icon={faUsers} className=\"text-blue-600\" />\n                        <span>\n                          {course.students && Array.isArray(course.students) \n                            ? course.students.length \n                            : (course.studentsBySection && typeof course.studentsBySection === 'object' \n                              ? Object.values(course.studentsBySection).flat().length \n                              : 0)} students\n                        </span>\n                      </div>\n                      <div className=\"flex items-center gap-2 text-xs text-gray-600\">\n                        <FontAwesomeIcon icon={faBuilding} className=\"text-blue-600\" />\n                        <span>{course.displayDepartment || 'Computer Science & Engineering (Data Science)'}</span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex gap-2\">\n                      <button\n                        onClick={() => navigate(`/courses/${course.year}/${course.section}/${course.semester}/${course.courseId}`)}\n                        className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white text-xs font-medium px-3 py-2 rounded-md transition-colors duration-200\"\n                      >\n                        View Course\n                      </button>\n                      <button\n                        onClick={() => navigate(`/attendance/${course.courseId}`)}\n                        className=\"bg-green-600 hover:bg-green-700 text-white text-xs font-medium px-3 py-2 rounded-md transition-colors duration-200\"\n                      >\n                        Attendance\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        ) : (\n          <div className=\"compact-card mb-6\">\n            <div className=\"text-center py-8\">\n              <FontAwesomeIcon icon={faChalkboardTeacher} className=\"text-gray-400 text-4xl mb-4\" />\n              <h3 className=\"text-lg font-semibold text-gray-700 mb-2\">No Instructor Courses Found</h3>\n              <p className=\"text-gray-600 mb-4\">\n                You are not currently assigned as an instructor for any courses this semester.\n              </p>\n              <div className=\"bg-blue-50 rounded-lg p-4 text-sm text-blue-800\">\n                <p className=\"mb-2\"><strong>Debug Information:</strong></p>\n                <p>• Faculty AuthUid: {facultyData?.authUid || 'Not found'}</p>\n                <p>• Department: {facultyData?.department || 'Not found'}</p>\n                <p>• Instructor Courses Found: {instructorCourses.length}</p>\n                <p>• Found {students.length} total students in fallback</p>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className=\"flex items-center justify-between mb-6\">\n          <div className=\"flex items-center gap-3\">\n            <h1 className=\"text-2xl font-semibold text-gray-900\">\n              {instructorCourses.length > 0 ? 'Your Students' : 'All Students'}\n            </h1>\n            <span className=\"text-xs text-gray-500\">{loadTime > 0 ? `Loaded in ${loadTime}ms` : 'Loading...'}</span>\n            {isRefreshing && (\n              <span className=\"flex items-center gap-1 text-xs text-blue-600\">\n                <FontAwesomeIcon icon={faSync} className=\"animate-spin\" />\n                Refreshing\n              </span>\n            )}\n            {instructorCourses.length === 0 && (\n              <span className=\"bg-orange-100 text-orange-800 text-xs font-medium px-2 py-1 rounded-full\">\n                Fallback Data\n              </span>\n            )}\n          </div>\n          <div className=\"flex items-center gap-3\">\n            <div className=\"text-right\">\n              <div className=\"text-xl font-semibold text-gray-900\">{filteredStudents.length}</div>\n              <div className=\"text-xs text-gray-500\">\n                {instructorCourses.length > 0 ? 'Students in Your Courses' : 'Total Students'}\n              </div>\n            </div>\n            <button\n              onClick={handleRefresh}\n              disabled={isRefreshing}\n              className=\"btn-campus-primary inline-flex items-center gap-2 px-4 py-2 rounded-md text-sm disabled:opacity-50\"\n            >\n              <FontAwesomeIcon icon={faSync} className={isRefreshing ? 'animate-spin' : ''} />\n              Refresh\n            </button>\n          </div>\n        </div>\n\n\n\n        <div className=\"compact-card mb-6\">\n          <div className=\"grid gap-3 md:grid-cols-2\">\n            <div>\n              <div className=\"relative\">\n                <FontAwesomeIcon icon={faSearch} className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 text-sm\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search students by name, email, or roll number...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full pl-10 pr-3 py-2 rounded-md border border-gray-200 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm bg-gray-50\"\n                />\n              </div>\n            </div>\n            <div>\n              <select\n                value={sortOption}\n                onChange={(e) => setSortOption(e.target.value)}\n                className=\"w-full px-3 py-2 rounded-md border border-gray-200 focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 text-sm bg-gray-50\"\n              >\n                <option value=\"name\">Sort by Name</option>\n                <option value=\"rollNo\">Sort by Roll No</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <section className=\"grid gap-4 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\n          {filteredStudents.map((student, index) => (\n            <div\n              key={student.id}\n              className=\"group bg-white rounded-lg border p-4 hover:shadow-md animate-fade-in cursor-pointer transition-all\"\n              style={{ animationDelay: `${index * 50}ms` }}\n              onClick={() => navigate(`/students/${student.year || 'II'}/${student.section || 'A'}/${student.id}`)}\n            >\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-10 h-10 rounded-full bg-blue-50 text-blue-600 flex items-center justify-center mr-3\">\n                  <FontAwesomeIcon icon={faUserGraduate} className=\"text-sm\" />\n                </div>\n                <div className=\"flex-1\">\n                  <h3 className=\"text-sm font-semibold text-gray-900 truncate\">{student.name || 'Unknown'}</h3>\n                  <p className=\"text-xs text-gray-600\">{student.rollNo || 'N/A'}</p>\n                </div>\n                <div className=\"flex flex-col items-end\">\n                  <div className=\"w-2.5 h-2.5 bg-green-500 rounded-full mb-1\"></div>\n                  <span className=\"bg-blue-100 text-blue-800 text-xs font-medium px-2 py-1 rounded-full\">\n                    {student.totalCourses || 0} course{student.totalCourses !== 1 ? 's' : ''}\n                  </span>\n                </div>\n              </div>\n              \n              <div className=\"space-y-2 mb-4\">\n                <div className=\"flex items-center gap-2 text-xs text-gray-600\">\n                  <FontAwesomeIcon icon={faEnvelope} className=\"text-blue-600 text-sm\" />\n                  <span className=\"truncate\">{student.email || 'No email'}</span>\n                </div>\n                <div className=\"flex items-center gap-2 text-xs text-gray-600\">\n                  <FontAwesomeIcon icon={faIdCard} className=\"text-blue-600 text-sm\" />\n                  <span>{student.rollNo || 'No Roll No'}</span>\n                </div>\n                <div className=\"flex items-center gap-2 text-xs text-gray-600\">\n                  <FontAwesomeIcon icon={faGraduationCap} className=\"text-blue-600 text-sm\" />\n                  <span>{student.year || 'N/A'}-{student.section || 'N/A'}</span>\n                </div>\n              </div>\n\n              {/* Enrolled Courses Section */}\n              {student.enrolledCourses && student.enrolledCourses.length > 0 && (\n                <div className=\"mb-4\">\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <FontAwesomeIcon icon={faChalkboardTeacher} className=\"text-blue-600 text-xs\" />\n                    <span className=\"text-xs font-medium text-gray-700\">Enrolled in Your Courses:</span>\n                  </div>\n                  <div className=\"space-y-1\">\n                    {student.enrolledCourses.slice(0, 2).map((course, courseIndex) => (\n                      <div key={courseIndex} className=\"bg-blue-50 rounded px-2 py-1\">\n                        <div className=\"text-xs font-medium text-blue-800\">{course.courseName}</div>\n                        <div className=\"text-xs text-blue-600\">\n                          {course.courseCode} • {course.section} • {course.semester} sem\n                        </div>\n                      </div>\n                    ))}\n                    {student.enrolledCourses.length > 2 && (\n                      <div className=\"text-xs text-gray-500 text-center\">\n                        +{student.enrolledCourses.length - 2} more course{student.enrolledCourses.length - 2 !== 1 ? 's' : ''}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              )}\n\n              <div className=\"flex gap-2 mb-4\">\n                <span className=\"status-active inline-flex items-center px-2 py-1 rounded-full text-xs font-medium\">\n                  <FontAwesomeIcon icon={faCheckCircle} className=\"mr-1\" />\n                  Active\n                </span>\n                <span className=\"status-completed inline-flex items-center px-2 py-1 rounded-full text-xs font-medium\">\n                  {student.year || 'N/A'}-{student.section || 'N/A'}\n                </span>\n              </div>\n\n              <div className=\"flex justify-end\">\n                <button\n                  type=\"button\"\n                  onClick={(e) => { e.stopPropagation(); navigate(`/students/${student.year || 'II'}/${student.section || 'A'}/${student.id}`); }}\n                  className=\"inline-flex items-center gap-1.5 text-blue-600 hover:text-blue-700 font-medium transition-all text-sm\"\n                >\n                  View Details\n                  <FontAwesomeIcon icon={faArrowRight} className=\"transition-transform group-hover:translate-x-1\" />\n                </button>\n              </div>\n            </div>\n          ))}\n        </section>\n\n                      {filteredStudents.length === 0 && !loading && (\n                <div className=\"text-center py-16\">\n                  <div className=\"bg-white rounded-2xl shadow-xl p-12 border border-gray-100\">\n                    <FontAwesomeIcon icon={faUsers} className=\"text-gray-400 text-6xl mb-6\" />\n                    <h3 className=\"text-2xl font-semibold text-gray-700 mb-3\">No students found</h3>\n                    <p className=\"text-gray-600 text-lg\">Try adjusting your search or filter criteria.</p>\n                  </div>\n                </div>\n              )}\n      </div>\n    </div>\n  );\n};\n\nexport default StudentList;\n\n"],"names":["CACHE_KEY","CACHE_TIMESTAMP_KEY","CACHE_DURATION","StudentList","students","setStudents","useState","searchTerm","setSearchTerm","sortOption","setSortOption","loading","setLoading","error","setError","isRefreshing","setIsRefreshing","loadTime","setLoadTime","facultyData","setFacultyData","instructorCourses","setInstructorCourses","showCourseDetails","setShowCourseDetails","navigate","useNavigate","useRef","dataFetched","getCachedData","useCallback","cached","timestamp","parsed","fetchDataUltraFast","user","startTime","facultyRef","doc","db","facultySnap","getDoc","instructorId","instructorCourseList","courseDetailsQuery","collectionGroup","courseDetailsSnap","getDocs","courseDoc","courseData","courseId","allStudentIds","courseStudentMap","course","section","studentIds","studentId","uniqueStudentIds","uniqueStudentIdsSet","fetchedStudents","studentPaths","pathSegments","studentsRef","collection","studentsSnap","instructorStudents","student","allStudents","useEffect","cachedData","unsubscribe","onAuthStateChanged","auth","filteredStudents","useMemo","base","term","a","b","handleRefresh","jsxs","jsx","_","i","FontAwesomeIcon","faExclamationTriangle","faSync","faChalkboardTeacher","faArrowLeft","faArrowRight","index","faGraduationCap","faUsers","faBuilding","faSearch","e","faUserGraduate","faEnvelope","faIdCard","courseIndex","faCheckCircle"],"mappings":"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"}