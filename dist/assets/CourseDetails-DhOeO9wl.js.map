{"version":3,"file":"CourseDetails-DhOeO9wl.js","sources":["../../src/components/CourseDetails.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { collectionGroup, doc, getDoc, getDocs, updateDoc, deleteDoc, query, where, documentId } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\"; // Firebase configuration\r\n\r\nconst CourseDetails = () => {\r\n  const { year, section, semester, id } = useParams();\r\n  const [course, setCourse] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [editMode, setEditMode] = useState(false); // Toggle edit mode\r\n  const [instructorName, setInstructorName] = useState(\"\");\r\n  const [studyMaterials, setStudyMaterials] = useState([]);\r\n  const [assignments, setAssignments] = useState([]);\r\n  const [newMaterial, setNewMaterial] = useState({ name: \"\", file: null });\r\n  const [newAssignment, setNewAssignment] = useState({ name: \"\", file: null });\r\n  const [students, setStudents] = useState([]);\r\n  // Tabs state must be declared before any conditional returns to satisfy hooks rules\r\n  const [activeTab, setActiveTab] = useState(\"overview\");\r\n\r\n  const [formData, setFormData] = useState({\r\n    actualHours: \"\",\r\n    cls: \"\",\r\n    courseCode: \"\",\r\n    courseName: \"\",\r\n    coveragePercentage: \"\",\r\n    deviationReasons: \"\",\r\n    instructor: \"\",\r\n    ods: \"\",\r\n    permissions: \"\",\r\n    syllabusCoverage: \"\",\r\n    unitsCompleted: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchCourseDetails = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const coursePath = `courses/${year}/${section}/${semester}/courseDetails/${id}`;\r\n        const courseRef = doc(db, coursePath);\r\n        const courseSnap = await getDoc(courseRef);\r\n\r\n        if (courseSnap.exists()) {\r\n          const fetchedCourse = { id, ...courseSnap.data() };\r\n          setCourse(fetchedCourse);\r\n          setFormData(fetchedCourse); // Pre-fill form data for editing\r\n          setStudyMaterials(fetchedCourse.studyMaterials || []);\r\n          setAssignments(fetchedCourse.assignments || []);\r\n\r\n          // Fetch instructor's name\r\n          const instructorRef = doc(db, \"faculty\", \"CSE_DS\", \"members\", fetchedCourse.instructor);\r\n          const instructorSnap = await getDoc(instructorRef);\r\n          if (instructorSnap.exists()) {\r\n            setInstructorName(instructorSnap.data().name || \"Unknown\");\r\n          } else {\r\n            setInstructorName(\"Unknown\");\r\n          }\r\n          // Fetch enrolled students from the course document if it contains an array of student IDs\r\n          if (Array.isArray(fetchedCourse.students) && fetchedCourse.students.length > 0) {\r\n            const details = await Promise.all(\r\n              fetchedCourse.students.map(async (s) => {\r\n                const studentId = typeof s === 'string' ? s : (s?.id || s?.studentId || s);\r\n                const sRef = doc(db, `students/${year}/${section}/${studentId}`);\r\n                const sSnap = await getDoc(sRef);\r\n                const base = sSnap.exists() ? { id: studentId, ...sSnap.data() } : { id: studentId };\r\n\r\n                // Also enrolled courses (best-effort; skip if index missing)\r\n                let enrolledCourses = [];\r\n                try {\r\n                  const cg = collectionGroup(db, \"courseDetails\");\r\n                  const qy = query(cg, where(\"students\", \"array-contains\", studentId));\r\n                  const qs = await getDocs(qy);\r\n                  enrolledCourses = [];\r\n                  qs.forEach((d) => {\r\n                    const seg = d.ref.path.split(\"/\");\r\n                    const y = seg[1], sec = seg[2], sem = seg[3];\r\n                    const isCurrent = (y === year && sec === section && sem === semester && d.id === id);\r\n                    if (!isCurrent) {\r\n                      enrolledCourses.push({ id: d.id, name: d.data().courseName, year: y, section: sec, semester: sem });\r\n                    }\r\n                  });\r\n                } catch (_) {\r\n                  // ignore if index missing\r\n                }\r\n                return { ...base, enrolledCourses };\r\n              })\r\n            );\r\n            setStudents(details);\r\n          } else {\r\n            setStudents([]);\r\n          }\r\n        } else {\r\n          setError(\"Course not found.\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching course details.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCourseDetails();\r\n  }, [id, year, section, semester]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      const coursePath = `courses/${year}/${section}/${semester}/courseDetails/${id}`;\r\n      const courseRef = doc(db, coursePath);\r\n      await updateDoc(courseRef, { ...formData, studyMaterials, assignments });\r\n      setCourse({ ...course, ...formData, studyMaterials, assignments });\r\n      setEditMode(false); // Exit edit mode\r\n    } catch (err) {\r\n      console.error(\"Error updating course:\", err);\r\n      setError(\"Failed to update course details.\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      const coursePath = `courses/${year}/${section}/${semester}/courseDetails/${id}`;\r\n      const courseRef = doc(db, coursePath);\r\n      await deleteDoc(courseRef);\r\n      setCourse(null); // Clear course data\r\n      setError(\"Course deleted successfully.\"); // Notify user\r\n    } catch (err) {\r\n      console.error(\"Error deleting course:\", err);\r\n      setError(\"Failed to delete course.\");\r\n    }\r\n  };\r\n\r\n  const addMaterial = () => {\r\n    if (newMaterial.name.trim()) {\r\n      setStudyMaterials([...studyMaterials, newMaterial]);\r\n      setNewMaterial({ name: \"\", file: null });\r\n    }\r\n  };\r\n\r\n  const addAssignment = () => {\r\n    if (newAssignment.name.trim()) {\r\n      setAssignments([...assignments, newAssignment]);\r\n      setNewAssignment({ name: \"\", file: null });\r\n    }\r\n  };\r\n\r\n  const handleMaterialFileChange = (e) => {\r\n    setNewMaterial({ ...newMaterial, file: e.target.files[0] });\r\n  };\r\n\r\n  const handleAssignmentFileChange = (e) => {\r\n    setNewAssignment({ ...newAssignment, file: e.target.files[0] });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 flex items-center justify-center p-8\">\r\n        <div className=\"bg-white rounded-2xl shadow-xl p-12 text-center border border-gray-100\">\r\n          <div className=\"w-16 h-16 bg-gray-200 rounded-full mx-auto mb-6 animate-pulse\"></div>\r\n          <p className=\"text-gray-600 text-lg\">Loading course details...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error && !course) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 flex items-center justify-center p-8\">\r\n        <div className=\"bg-white rounded-2xl shadow-xl p-12 text-center border border-gray-100\">\r\n          <div className=\"text-blue-600 text-xl font-semibold mb-2\">{error}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!course) {\r\n    return <div className=\"text-center text-gray-600\">Course not found or deleted.</div>;\r\n  }\r\n\r\n  const enrolledCount = Array.isArray(course.students) ? course.students.length : 0;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-blue-50 p-8\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <header className=\"mb-12 flex flex-col lg:flex-row lg:items-center lg:justify-between gap-6 animate-fade-in\">\r\n          <div>\r\n            <h1 className=\"text-4xl lg:text-5xl font-bold text-gray-800 mb-3\">{course.courseName}</h1>\r\n            <p className=\"text-gray-600 text-lg\">{course.courseCode} • {year}-{section} • {semester?.toUpperCase()}</p>\r\n          </div>\r\n          <div className=\"grid grid-cols-3 gap-4\">\r\n            <div className=\"bg-white rounded-2xl shadow-xl px-6 py-4 border border-gray-100 text-center\">\r\n              <div className=\"text-sm text-gray-500\">Students</div>\r\n              <div className=\"text-2xl font-bold text-blue-600\">{enrolledCount}</div>\r\n            </div>\r\n            <div className=\"bg-white rounded-2xl shadow-xl px-6 py-4 border border-gray-100 text-center\">\r\n              <div className=\"text-sm text-gray-500\">Coverage</div>\r\n              <div className=\"text-2xl font-bold text-blue-600\">{course.coveragePercentage || '—'}</div>\r\n            </div>\r\n            <div className=\"bg-white rounded-2xl shadow-xl px-6 py-4 border border-gray-100 text-center\">\r\n              <div className=\"text-sm text-gray-500\">Units Completed</div>\r\n              <div className=\"text-2xl font-bold text-blue-600\">{course.unitsCompleted || '—'}</div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"bg-white rounded-2xl shadow-xl p-2 mb-8 border border-gray-100\">\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            {[\r\n              { key: 'overview', label: 'Overview' },\r\n              { key: 'students', label: 'Students' },\r\n              { key: 'materials', label: 'Materials' },\r\n              { key: 'schedule', label: 'Schedule' },\r\n              { key: 'edit', label: 'Edit' },\r\n            ].map(tab => (\r\n              <button\r\n                key={tab.key}\r\n                onClick={() => setActiveTab(tab.key)}\r\n                className={`px-4 py-2 rounded-xl text-sm font-medium transition-colors ${activeTab === tab.key ? 'bg-blue-600 text-white' : 'text-gray-700 hover:bg-gray-100'}`}\r\n              >\r\n                {tab.label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        {activeTab === 'overview' && (\r\n          <section className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n            <div className=\"lg:col-span-2 bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\r\n              <h2 className=\"text-xl font-bold text-gray-800 mb-6\">Course Information</h2>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div>\r\n                  <div className=\"text-sm text-gray-500\">Instructor</div>\r\n                  <div className=\"text-gray-800 font-medium\">{instructorName}</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-sm text-gray-500\">Class</div>\r\n                  <div className=\"text-gray-800 font-medium\">{course.cls || '—'}</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-sm text-gray-500\">Actual Hours</div>\r\n                  <div className=\"text-gray-800 font-medium\">{course.actualHours || '—'}</div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"text-sm text-gray-500\">Permissions</div>\r\n                  <div className=\"text-gray-800 font-medium\">{course.permissions || '—'}</div>\r\n                </div>\r\n                <div className=\"md:col-span-2\">\r\n                  <div className=\"text-sm text-gray-500\">Syllabus Coverage</div>\r\n                  <div className=\"text-gray-800 font-medium\">{course.syllabusCoverage || '—'}</div>\r\n                </div>\r\n                <div className=\"md:col-span-2\">\r\n                  <div className=\"text-sm text-gray-500\">Deviation Reasons</div>\r\n                  <div className=\"text-gray-800\">{course.deviationReasons || '—'}</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\r\n              <h2 className=\"text-xl font-bold text-gray-800 mb-6\">Quick Actions</h2>\r\n              <div className=\"flex flex-col gap-3\">\r\n                <button className=\"btn-campus-primary px-4 py-3 rounded-xl\">Mark Attendance</button>\r\n                <button className=\"btn-campus-primary px-4 py-3 rounded-xl\">Create Assignment</button>\r\n                <button onClick={() => setEditMode(true) || setActiveTab('edit')} className=\"btn-campus-primary px-4 py-3 rounded-xl\">Edit Course</button>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        )}\r\n\r\n        {activeTab === 'students' && (\r\n          <section className=\"bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\r\n            <h2 className=\"text-xl font-bold text-gray-800 mb-6\">Enrolled Students</h2>\r\n            {students.length === 0 ? (\r\n              <div className=\"text-center py-16\">\r\n                <div className=\"text-gray-600\">No students enrolled.</div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n                {students.map((s) => (\r\n                  <div key={s.id} className=\"bg-gray-50 border border-gray-200 rounded-xl p-6\">\r\n                    <div className=\"text-lg font-semibold text-gray-800\">{s.name || s.id}</div>\r\n                    <div className=\"text-sm text-gray-600\">{s.email || '—'}</div>\r\n                    <div className=\"text-sm text-gray-600 mb-3\">Roll No: {s.rollNo || '—'}</div>\r\n                    {Array.isArray(s.enrolledCourses) && s.enrolledCourses.length > 0 && (\r\n                      <div>\r\n                        <div className=\"text-sm font-medium text-gray-700 mb-1\">Also enrolled in:</div>\r\n                        <div className=\"flex flex-wrap gap-2\">\r\n                          {s.enrolledCourses.map((c) => (\r\n                            <span key={`${c.year}-${c.section}-${c.semester}-${c.id}`} className=\"inline-flex items-center px-2 py-1 rounded-full text-xs bg-blue-100 text-blue-700\">\r\n                              {c.name || c.id} • {c.year}-{c.section} {c.semester.toUpperCase()}\r\n                            </span>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </section>\r\n        )}\r\n\r\n        {activeTab === 'materials' && (\r\n          <section className=\"bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\r\n            <h2 className=\"text-xl font-bold text-gray-800 mb-6\">Study Materials</h2>\r\n            <ul className=\"space-y-2\">\r\n              {studyMaterials.length === 0 && (<li className=\"text-gray-600\">No materials added.</li>)}\r\n              {studyMaterials.map((material, index) => (\r\n                <li key={index} className=\"flex items-center justify-between bg-gray-50 border border-gray-200 rounded-xl px-4 py-3\">\r\n                  <span className=\"text-gray-800\">{material.name}</span>\r\n                  <button className=\"text-blue-600 hover:underline text-sm\">View</button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            {editMode && (\r\n              <div className=\"mt-6 grid gap-3 md:grid-cols-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Material Name\"\r\n                  value={newMaterial.name}\r\n                  onChange={(e) => setNewMaterial({ ...newMaterial, name: e.target.value })}\r\n                  className=\"w-full px-4 py-3 rounded-xl border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                />\r\n                <input type=\"file\" onChange={handleMaterialFileChange} className=\"w-full px-4 py-3 rounded-xl border border-gray-300\" />\r\n                <button type=\"button\" onClick={addMaterial} className=\"btn-campus-primary rounded-xl px-4 py-3\">Add Material</button>\r\n              </div>\r\n            )}\r\n          </section>\r\n        )}\r\n\r\n        {activeTab === 'schedule' && (\r\n          <section className=\"bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\r\n            <h2 className=\"text-xl font-bold text-gray-800 mb-6\">Schedule</h2>\r\n            <div className=\"text-gray-600\">No schedule data available.</div>\r\n          </section>\r\n        )}\r\n\r\n        {activeTab === 'edit' && (\r\n          <section className=\"bg-white rounded-2xl shadow-xl p-8 border border-gray-100\">\r\n            <h2 className=\"text-xl font-bold text-gray-800 mb-6\">Edit Course</h2>\r\n            <form className=\"grid gap-4 md:grid-cols-2\">\r\n              {Object.keys(formData).map((key) => (\r\n                <div key={key} className=\"flex flex-col gap-2\">\r\n                  <label className=\"text-sm text-gray-600 font-medium\">{key}</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name={key}\r\n                    value={formData[key]}\r\n                    onChange={handleInputChange}\r\n                    className=\"px-4 py-3 rounded-xl border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                  />\r\n                </div>\r\n              ))}\r\n              <div className=\"md:col-span-2 flex gap-3 mt-4\">\r\n                <button type=\"button\" className=\"btn-campus-primary rounded-xl px-6 py-3\" onClick={handleUpdate}>Update</button>\r\n                <button type=\"button\" className=\"px-6 py-3 rounded-xl border border-gray-300 hover:bg-gray-100\" onClick={() => setEditMode(false) || setActiveTab('overview')}>Cancel</button>\r\n              </div>\r\n            </form>\r\n          </section>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CourseDetails;\r\n"],"names":["CourseDetails","year","section","semester","id","useParams","course","setCourse","useState","loading","setLoading","error","setError","editMode","setEditMode","instructorName","setInstructorName","studyMaterials","setStudyMaterials","assignments","setAssignments","newMaterial","setNewMaterial","newAssignment","setNewAssignment","students","setStudents","activeTab","setActiveTab","formData","setFormData","useEffect","coursePath","courseRef","doc","db","courseSnap","getDoc","fetchedCourse","instructorRef","instructorSnap","details","s","studentId","sRef","sSnap","base","enrolledCourses","cg","collectionGroup","qy","query","where","qs","getDocs","d","seg","y","sec","sem","handleInputChange","e","name","value","handleUpdate","updateDoc","err","addMaterial","handleMaterialFileChange","jsxs","jsx","enrolledCount","tab","c","material","index","key"],"mappings":"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"}