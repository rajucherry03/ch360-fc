{"version":3,"file":"StudentList-BtjjyCJT.js","sources":["../../src/components/StudentList.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback, useRef } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { auth, db } from \"../firebase\";\r\nimport { \r\n  collection, \r\n  doc, \r\n  getDoc, \r\n  getDocs, \r\n  query, \r\n  where, \r\n  collectionGroup,\r\n  documentId \r\n} from 'firebase/firestore';\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faUsers, \r\n  faFilter, \r\n  faSearch, \r\n  faExclamationTriangle, \r\n  faUserGraduate, \r\n  faChalkboardTeacher,\r\n  faClock,\r\n  faCheckCircle,\r\n  faEnvelope,\r\n  faGraduationCap,\r\n  faIdCard,\r\n  faArrowRight,\r\n  faSync,\r\n  faRocket,\r\n  faArrowLeft,\r\n  faBuilding,\r\n  faBookOpen\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n// Ultra-fast cache management\r\nconst CACHE_KEY = \"studentsCache_v2\";\r\nconst CACHE_TIMESTAMP_KEY = \"studentsCacheTimestamp\";\r\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\r\n\r\nconst StudentList = () => {\r\n  const [students, setStudents] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortOption, setSortOption] = useState(\"name\");\r\n  const [loading, setLoading] = useState(false); // Start with false for instant display\r\n  const [error, setError] = useState(null);\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [loadTime, setLoadTime] = useState(0);\r\n  const [facultyData, setFacultyData] = useState(null);\r\n  const [instructorCourses, setInstructorCourses] = useState([]);\r\n  const [showCourseDetails, setShowCourseDetails] = useState(false);\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  // Performance tracking\r\n  const startTime = useRef(Date.now());\r\n  const dataFetched = useRef(false);\r\n\r\n  // Instant cache retrieval - runs synchronously\r\n  const getCachedData = useCallback(() => {\r\n    try {\r\n      const cached = localStorage.getItem(CACHE_KEY);\r\n      const timestamp = localStorage.getItem(CACHE_TIMESTAMP_KEY);\r\n      \r\n      if (cached && timestamp) {\r\n        const age = Date.now() - parseInt(timestamp);\r\n        if (age < CACHE_DURATION) {\r\n          const parsed = JSON.parse(cached);\r\n          if (Array.isArray(parsed) && parsed.length > 0) {\r\n            return parsed;\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Cache read failed:\", error);\r\n    }\r\n    return null;\r\n  }, []);\r\n\r\n  // Simple and direct data fetching\r\n  const fetchDataUltraFast = useCallback(async (user) => {\r\n    if (!user || dataFetched.current) {\r\n      console.log(\"‚ùå Data already fetched, skipping\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"üöÄ Starting simple data fetch for user:\", user.uid);\r\n    const startTime = Date.now();\r\n    setLoading(true);\r\n    setError(null);\r\n    dataFetched.current = true;\r\n\r\n    try {\r\n      // Step 1: Get faculty data to get authUid\r\n      console.log(\"üîç Step 1: Getting faculty data...\");\r\n      let facultyData = null;\r\n      const facultyRef = doc(db, 'faculty', 'CSE_DS', 'members', user.uid);\r\n      const facultySnap = await getDoc(facultyRef);\r\n      \r\n      if (facultySnap.exists()) {\r\n        facultyData = facultySnap.data();\r\n        setFacultyData(facultyData);\r\n        console.log(\"‚úÖ Faculty found:\", facultyData.name, \"authUid:\", facultyData.authUid);\r\n      } else {\r\n        console.log(\"‚ùå Faculty not found, using user.uid as instructor\");\r\n        facultyData = { authUid: user.uid, name: user.email, department: 'Unknown' };\r\n        setFacultyData(facultyData);\r\n      }\r\n\r\n      const instructorId = facultyData.authUid;\r\n      console.log(\"üéØ Looking for courses where instructor =\", instructorId);\r\n\r\n      // Step 2: Find all courses where instructor matches\r\n      console.log(\"üîç Step 2: Finding instructor courses...\");\r\n      const instructorCourseList = [];\r\n      \r\n      // Use collectionGroup to search all courseDetails\r\n      const courseDetailsQuery = collectionGroup(db, 'courseDetails');\r\n      const courseDetailsSnap = await getDocs(courseDetailsQuery);\r\n      \r\n      console.log(`üìö Found ${courseDetailsSnap.docs.length} total courses`);\r\n      \r\n      for (const courseDoc of courseDetailsSnap.docs) {\r\n        const courseData = courseDoc.data();\r\n        const courseId = courseDoc.id;\r\n        \r\n        console.log(`üîç Course: ${courseData.courseName}, Instructor: ${courseData.instructor}`);\r\n        \r\n        if (courseData.instructor === instructorId) {\r\n          console.log(`‚úÖ Match found! Course: ${courseData.courseName}`);\r\n          instructorCourseList.push({\r\n            id: courseId,\r\n            courseName: courseData.courseName,\r\n            courseCode: courseData.courseCode,\r\n            instructor: courseData.instructor,\r\n            studentsBySection: courseData.studentsBySection,\r\n            students: courseData.students || [],\r\n            year: courseData.displayYear?.split('_')[0] || 'III',\r\n            section: courseData.displaySection || 'All',\r\n            semester: courseData.displaySemester || '5',\r\n            credits: courseData.credits || 3\r\n          });\r\n        }\r\n      }\r\n\r\n      setInstructorCourses(instructorCourseList);\r\n      console.log(`üë®‚Äçüè´ Found ${instructorCourseList.length} instructor courses`);\r\n\r\n      // Step 3: Get all students from instructor courses\r\n      console.log(\"üîç Step 3: Getting students from instructor courses...\");\r\n      const allStudentIds = new Set();\r\n      const courseStudentMap = new Map();\r\n\r\n      instructorCourseList.forEach(course => {\r\n        console.log(`üìö Processing course: ${course.courseName}`);\r\n        \r\n        // Get students from studentsBySection\r\n        if (course.studentsBySection && typeof course.studentsBySection === 'object') {\r\n          Object.entries(course.studentsBySection).forEach(([section, studentIds]) => {\r\n            if (Array.isArray(studentIds)) {\r\n              console.log(`   Section ${section}: ${studentIds.length} students`);\r\n              studentIds.forEach(studentId => {\r\n                allStudentIds.add(studentId);\r\n                if (!courseStudentMap.has(studentId)) {\r\n                  courseStudentMap.set(studentId, []);\r\n                }\r\n                courseStudentMap.get(studentId).push({\r\n                  courseName: course.courseName,\r\n                  courseCode: course.courseCode,\r\n                  section: section,\r\n                  semester: course.semester,\r\n                  year: course.year\r\n                });\r\n              });\r\n            }\r\n          });\r\n        }\r\n        \r\n        // Also check direct students array\r\n        if (course.students && Array.isArray(course.students)) {\r\n          console.log(`   Direct students: ${course.students.length} students`);\r\n          course.students.forEach(studentId => {\r\n            allStudentIds.add(studentId);\r\n            if (!courseStudentMap.has(studentId)) {\r\n              courseStudentMap.set(studentId, []);\r\n            }\r\n            courseStudentMap.get(studentId).push({\r\n              courseName: course.courseName,\r\n              courseCode: course.courseCode,\r\n              section: course.section,\r\n              semester: course.semester,\r\n              year: course.year\r\n            });\r\n          });\r\n        }\r\n      });\r\n\r\n      const uniqueStudentIds = Array.from(allStudentIds);\r\n      console.log(`üìö Found ${uniqueStudentIds.length} unique students from instructor courses`);\r\n      console.log(\"üîç uniqueStudentIds type:\", typeof uniqueStudentIds);\r\n      console.log(\"üîç uniqueStudentIds is Array:\", Array.isArray(uniqueStudentIds));\r\n      console.log(\"üîç Sample student IDs:\", uniqueStudentIds.slice(0, 5));\r\n\r\n      // Convert back to Set for efficient lookup\r\n      const uniqueStudentIdsSet = new Set(uniqueStudentIds);\r\n      console.log(\"üîç uniqueStudentIdsSet is Set:\", uniqueStudentIdsSet instanceof Set);\r\n      console.log(\"üîç uniqueStudentIdsSet size:\", uniqueStudentIdsSet.size);\r\n\r\n      // Step 4: Fetch student details\r\n      console.log(\"üîç Step 4: Fetching student details...\");\r\n      const fetchedStudents = [];\r\n      \r\n      // Try common student paths\r\n      const studentPaths = [\r\n        ['students', 'CSEDS', 'III-A'],\r\n        ['students', 'CSEDS', 'III-B'],\r\n        ['students', 'CSEDS', 'III-C'],\r\n        ['students', 'CSE_DS', 'III_A'],\r\n        ['students', 'CSE_DS', 'III_B'],\r\n        ['students', 'CSE_DS', 'III_C'],\r\n      ];\r\n\r\n      for (const pathSegments of studentPaths) {\r\n        try {\r\n          const studentsRef = collection(db, ...pathSegments);\r\n          const studentsSnap = await getDocs(studentsRef);\r\n          console.log(`üìö Found ${studentsSnap.docs.length} students in ${pathSegments.join('/')}`);\r\n          fetchedStudents.push(...studentsSnap.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n        } catch (error) {\r\n          console.log(`‚ùå Failed to fetch from ${pathSegments.join('/')}`);\r\n        }\r\n      }\r\n\r\n      // Step 5: Filter and map students\r\n      const instructorStudents = fetchedStudents\r\n        .filter(student => {\r\n          // Ensure uniqueStudentIds is a Set and student.id exists\r\n          if (!uniqueStudentIdsSet || !(uniqueStudentIdsSet instanceof Set)) {\r\n            console.log(\"‚ùå uniqueStudentIdsSet is not a valid Set:\", uniqueStudentIdsSet);\r\n            return false;\r\n          }\r\n          if (!student || !student.id) {\r\n            console.log(\"‚ùå Student or student.id is missing:\", student);\r\n            return false;\r\n          }\r\n          return uniqueStudentIdsSet.has(student.id);\r\n        })\r\n        .map(student => ({\r\n          ...student,\r\n          enrolledCourses: courseStudentMap.get(student.id) || [],\r\n          totalCourses: (courseStudentMap.get(student.id) || []).length\r\n        }));\r\n\r\n      console.log(`‚úÖ Found ${instructorStudents.length} instructor students`);\r\n\r\n      // If no instructor students found, show all students as fallback\r\n      if (instructorStudents.length === 0) {\r\n        console.log(\"‚ö†Ô∏è No instructor students found, showing all students\");\r\n        const allStudents = fetchedStudents.map(student => ({\r\n          ...student,\r\n          enrolledCourses: [],\r\n          totalCourses: 0\r\n        }));\r\n        setStudents(allStudents);\r\n      } else {\r\n        setStudents(instructorStudents);\r\n      }\r\n\r\n      const loadTime = Date.now() - startTime;\r\n      setLoadTime(loadTime);\r\n      console.log(`üöÄ Data loaded in ${loadTime}ms`);\r\n\r\n    } catch (error) {\r\n      console.error(\"Data fetch failed:\", error);\r\n      setError(\"Failed to load data. Please try again.\");\r\n      dataFetched.current = false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Instant display from cache, then background refresh\r\n  useEffect(() => {\r\n    const cachedData = getCachedData();\r\n    if (cachedData) {\r\n      setStudents(cachedData);\r\n      setLoading(false);\r\n      // Start background refresh\r\n      setIsRefreshing(true);\r\n    } else {\r\n      setLoading(true);\r\n    }\r\n  }, [getCachedData]);\r\n\r\n  // Background data fetching\r\n  useEffect(() => {\r\n    let unsubscribe;\r\n    \r\n    const initializeData = async () => {\r\n      unsubscribe = onAuthStateChanged(auth, async (user) => {\r\n        if (!user) {\r\n          setError(\"No user is logged in.\");\r\n          setLoading(false);\r\n          setIsRefreshing(false);\r\n          return;\r\n        }\r\n\r\n        // If we have cached data, refresh in background\r\n        if (students.length > 0) {\r\n          fetchDataUltraFast(user);\r\n        } else {\r\n          // No cache, fetch immediately\r\n          await fetchDataUltraFast(user);\r\n        }\r\n      });\r\n    };\r\n\r\n    initializeData();\r\n    return () => {\r\n      if (unsubscribe) unsubscribe();\r\n    };\r\n  }, [fetchDataUltraFast, students.length]);\r\n\r\n  // Optimized filtering and sorting\r\n  const filteredStudents = useMemo(() => {\r\n    let base = students;\r\n    \r\n    // Apply search filter\r\n    if (searchTerm) {\r\n      const term = searchTerm.toLowerCase();\r\n      base = base.filter(student =>\r\n        (student.name || '').toLowerCase().includes(term) ||\r\n        (student.email || '').toLowerCase().includes(term) ||\r\n        (student.rollNo || '').toLowerCase().includes(term)\r\n      );\r\n    }\r\n    \r\n    // Apply sorting\r\n    return base.sort((a, b) => {\r\n      if (sortOption === \"name\") {\r\n        return (a.name || '').localeCompare(b.name || '');\r\n      }\r\n      return 0;\r\n    });\r\n  }, [students, searchTerm, sortOption]);\r\n\r\n  // Force refresh function\r\n  const handleRefresh = useCallback(async () => {\r\n    console.log(\"üîÑ Manual refresh triggered\");\r\n    setIsRefreshing(true);\r\n    dataFetched.current = false; // Reset the flag to allow fresh data fetch\r\n    \r\n    // Clear cache\r\n    try {\r\n      localStorage.removeItem(CACHE_KEY);\r\n      localStorage.removeItem(CACHE_TIMESTAMP_KEY);\r\n      console.log(\"üóëÔ∏è Cache cleared\");\r\n    } catch (error) {\r\n      console.log(\"Cache clear failed:\", error);\r\n    }\r\n    \r\n    const user = auth.currentUser;\r\n    if (user) {\r\n      console.log(\"üîÑ Starting fresh data fetch for user:\", user.uid);\r\n      await fetchDataUltraFast(user);\r\n    } else {\r\n      console.log(\"‚ùå No user found for refresh\");\r\n      setIsRefreshing(false);\r\n    }\r\n  }, [fetchDataUltraFast]);\r\n\r\n  if (loading && students.length === 0) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900 p-8\">\r\n        <div className=\"max-w-7xl mx-auto\">\r\n          <div className=\"mb-12 animate-fade-in\">\r\n            <div className=\"h-16 bg-gray-200 dark:bg-gray-700 rounded-2xl mb-6 animate-pulse\"></div>\r\n            <div className=\"h-8 bg-gray-200 dark:bg-gray-700 rounded-xl w-1/3 animate-pulse\"></div>\r\n          </div>\r\n          <div className=\"grid gap-8 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\r\n            {Array.from({ length: 9 }).map((_, i) => (\r\n              <div key={i} className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-8 animate-fade-in border border-gray-200 dark:border-gray-700\" style={{ animationDelay: `${i * 50}ms` }}>\r\n                <div className=\"flex items-center mb-6\">\r\n                  <div className=\"w-20 h-20 bg-gray-200 dark:bg-gray-700 rounded-full mr-6 animate-pulse\"></div>\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"h-6 bg-gray-200 dark:bg-gray-700 rounded w-3/4 mb-3 animate-pulse\"></div>\r\n                    <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2 animate-pulse\"></div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"space-y-3 mb-6\">\r\n                  <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\"></div>\r\n                  <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-2/3 animate-pulse\"></div>\r\n                  <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2 animate-pulse\"></div>\r\n                </div>\r\n                <div className=\"flex gap-3 mb-6\">\r\n                  <div className=\"h-8 w-20 bg-gray-200 dark:bg-gray-700 rounded-full animate-pulse\"></div>\r\n                  <div className=\"h-8 w-24 bg-gray-200 dark:bg-gray-700 rounded-full animate-pulse\"></div>\r\n                </div>\r\n                <div className=\"h-6 w-24 bg-gray-200 dark:bg-gray-700 rounded animate-pulse\"></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error && students.length === 0) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900 flex items-center justify-center p-8\">\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-12 text-center border border-gray-200 dark:border-gray-700\">\r\n          <FontAwesomeIcon icon={faExclamationTriangle} className=\"text-red-600 dark:text-red-400 text-6xl mb-6 animate-bounce\" />\r\n          <div className=\"text-gray-950 dark:text-white text-xl font-semibold mb-6\">{error}</div>\r\n          <button\r\n            onClick={handleRefresh}\r\n            className=\"bg-primary hover:bg-secondary text-white font-semibold px-8 py-4 rounded-xl shadow-lg transition-all duration-300 text-lg font-medium inline-flex items-center gap-3\"\r\n          >\r\n            <FontAwesomeIcon icon={faSync} />\r\n            Try Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n    return (\r\n    <div className=\"min-h-screen bg-gray-100 dark:bg-gray-900 p-6\">\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        \r\n        {/* Instructor Summary Card */}\r\n        {facultyData && (\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 p-6 shadow-lg mb-8\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center gap-4\">\r\n                <div className=\"w-16 h-16 bg-gradient-to-br from-primary to-secondary rounded-full flex items-center justify-center text-white\">\r\n                  <FontAwesomeIcon icon={faChalkboardTeacher} className=\"text-xl\" />\r\n                </div>\r\n                <div>\r\n                  <h2 className=\"text-xl font-bold text-gray-950 dark:text-white mb-1\">{facultyData.name}</h2>\r\n                  <p className=\"text-gray-800 dark:text-gray-200 mb-2\">{facultyData.designation} ‚Ä¢ {facultyData.department}</p>\r\n                  {instructorCourses.length > 0 ? (\r\n                    <p className=\"text-sm text-gray-800 dark:text-gray-200\">Teaching {instructorCourses.length} course{instructorCourses.length !== 1 ? 's' : ''}</p>\r\n                  ) : (\r\n                    <p className=\"text-sm text-orange-600 dark:text-orange-400\">No instructor courses found for this semester</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <div className=\"text-2xl font-bold text-gray-950 dark:text-white\">{instructorCourses.length}</div>\r\n                <div className=\"text-sm text-gray-800 dark:text-gray-200\">Active Courses</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Instructor Course Details Card */}\r\n        {instructorCourses.length > 0 ? (\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 p-6 shadow-lg mb-8\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <div className=\"flex items-center gap-3\">\r\n                <div className=\"w-10 h-10 bg-gradient-to-br from-primary to-secondary rounded-xl flex items-center justify-center\">\r\n                  <FontAwesomeIcon icon={faChalkboardTeacher} className=\"text-white text-sm\" />\r\n                </div>\r\n                <h2 className=\"text-xl font-bold text-gray-950 dark:text-white\">Your Teaching Courses</h2>\r\n                <span className=\"bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300 text-xs font-medium px-2.5 py-0.5 rounded-full border border-blue-200 dark:border-blue-700\">\r\n                  {instructorCourses.length} course{instructorCourses.length !== 1 ? 's' : ''}\r\n                </span>\r\n              </div>\r\n              <button\r\n                onClick={() => setShowCourseDetails(!showCourseDetails)}\r\n                className=\"text-gray-800 dark:text-gray-200 hover:text-primary transition-colors text-sm font-medium flex items-center gap-2\"\r\n              >\r\n                {showCourseDetails ? 'Hide Details' : 'Show Details'}\r\n                <FontAwesomeIcon icon={showCourseDetails ? faArrowLeft : faArrowRight} className=\"text-xs\" />\r\n              </button>\r\n            </div>\r\n            \r\n            {showCourseDetails && (\r\n              <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\r\n                {instructorCourses.map((course, index) => (\r\n                  <div\r\n                    key={course.id}\r\n                    className=\"group bg-gray-50 dark:bg-gray-700 rounded-xl border border-gray-200 dark:border-gray-600 p-6 shadow-md hover:shadow-xl transition-all duration-300 hover:-translate-y-1 hover:bg-gray-100 dark:hover:bg-gray-600\"\r\n                    style={{ animationDelay: `${index * 100}ms` }}\r\n                  >\r\n                    <div className=\"flex items-start justify-between mb-4\">\r\n                      <div className=\"w-12 h-12 rounded-xl bg-gradient-to-br from-blue-500 to-blue-600 text-white flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300\">\r\n                        <FontAwesomeIcon icon={faBookOpen} className=\"text-lg\" />\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <FontAwesomeIcon icon={faArrowRight} className=\"text-gray-800 dark:text-gray-200 text-sm group-hover:text-primary transition-colors\"/>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                      <h3 className=\"text-lg font-bold text-gray-950 dark:text-white mb-3 group-hover:text-secondary transition-colors\">{course.courseName}</h3>\r\n                      <p className=\"text-gray-800 dark:text-gray-200 mb-4 text-sm leading-relaxed\">{course.courseCode}</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex flex-wrap gap-2 mb-4\">\r\n                      <span className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300 border border-blue-200 dark:border-blue-700\">\r\n                        <FontAwesomeIcon icon={faGraduationCap} className=\"mr-2\"/>\r\n                        {course.year} Year - {course.section} Section\r\n                      </span>\r\n                      <span className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-300 border border-purple-200 dark:border-purple-700\">\r\n                        <FontAwesomeIcon icon={faClock} className=\"mr-2\"/>\r\n                        {course.credits || 3} Credits\r\n                      </span>\r\n                    </div>\r\n                    \r\n                    <div className=\"space-y-2 mb-4\">\r\n                      <div className=\"flex items-center gap-2 text-xs text-gray-800 dark:text-gray-200\">\r\n                        <FontAwesomeIcon icon={faUsers} className=\"text-primary\"/>\r\n                        <span>\r\n                          {course.students && Array.isArray(course.students) \r\n                            ? course.students.length \r\n                            : (course.studentsBySection && typeof course.studentsBySection === 'object' \r\n                              ? Object.values(course.studentsBySection).flat().length \r\n                              : 0)} students\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex items-center gap-2 text-xs text-gray-800 dark:text-gray-200\">\r\n                        <FontAwesomeIcon icon={faBuilding} className=\"text-primary\"/>\r\n                        <span>{course.displayDepartment || 'Computer Science & Engineering (Data Science)'}</span>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex gap-3\">\r\n                      <button\r\n                        onClick={() => navigate(`/courses/${course.year}/${course.section}/${course.semester}/${course.courseId}`)}\r\n                        className=\"flex-1 bg-primary hover:bg-secondary text-white font-semibold px-4 py-2 rounded-xl text-sm transition-all duration-300 hover:shadow-md\"\r\n                      >\r\n                        View Course\r\n                      </button>\r\n                      <button\r\n                        onClick={() => navigate(`/attendance/${course.courseId}`)}\r\n                        className=\"flex-1 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-200 font-semibold px-4 py-2 rounded-xl text-sm transition-all duration-300 border border-gray-200 dark:border-gray-600\"\r\n                      >\r\n                        Attendance\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 p-6 shadow-lg mb-8\">\r\n            <div className=\"text-center py-8\">\r\n              <FontAwesomeIcon icon={faChalkboardTeacher} className=\"text-blue-600 dark:text-blue-400 text-4xl mb-4\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-950 dark:text-white mb-2\">No Instructor Courses Found</h3>\r\n              <p className=\"text-gray-800 dark:text-gray-200 mb-4\">\r\n                You are not currently assigned as an instructor for any courses this semester.\r\n              </p>\r\n              <div className=\"bg-gray-50 dark:bg-gray-700 rounded-xl p-4 text-sm text-gray-800 dark:text-gray-200\">\r\n                <p className=\"mb-2\"><strong>Debug Information:</strong></p>\r\n                <p>‚Ä¢ Faculty AuthUid: {facultyData?.authUid || 'Not found'}</p>\r\n                <p>‚Ä¢ Department: {facultyData?.department || 'Not found'}</p>\r\n                <p>‚Ä¢ Instructor Courses Found: {instructorCourses.length}</p>\r\n                <p>‚Ä¢ Found {students.length} total students in fallback</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Student Header Card */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 p-6 shadow-lg mb-8\">\r\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between\">\r\n            <div className=\"mb-4 lg:mb-0\">\r\n              <h1 className=\"text-3xl lg:text-4xl font-bold text-gray-950 dark:text-white flex items-center gap-3 mb-2\">\r\n                <div className=\"w-12 h-12 bg-gradient-to-br from-primary to-secondary rounded-xl flex items-center justify-center shadow-lg\">\r\n                  <FontAwesomeIcon icon={faUsers} className=\"text-white text-lg\"/>\r\n                </div>\r\n                {instructorCourses.length > 0 ? 'Your Students' : 'All Students'}\r\n              </h1>\r\n              <p className=\"text-gray-800 dark:text-gray-200 text-base flex items-center gap-2\">\r\n                <FontAwesomeIcon icon={faUserGraduate} className=\"text-gray-800 dark:text-gray-200\"/>\r\n                {loadTime > 0 ? `Loaded in ${loadTime}ms` : 'Loading...'} ‚Ä¢ {filteredStudents.length} students found\r\n                {isRefreshing && (\r\n                  <span className=\"flex items-center gap-1 text-xs text-primary\">\r\n                    <FontAwesomeIcon icon={faSync} className=\"animate-spin\" />\r\n                    Refreshing\r\n                  </span>\r\n                )}\r\n                {instructorCourses.length === 0 && (\r\n                  <span className=\"bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-300 text-xs font-medium px-2 py-1 rounded-full border border-blue-200 dark:border-blue-700\">\r\n                    Fallback Data\r\n                  </span>\r\n                )}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"text-right\">\r\n                <p className=\"text-sm text-gray-800 dark:text-gray-200\">Total Students</p>\r\n                <p className=\"text-lg font-semibold text-gray-950 dark:text-white\">{filteredStudents.length}</p>\r\n              </div>\r\n              <button\r\n                onClick={handleRefresh}\r\n                disabled={isRefreshing}\r\n                className=\"bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-800 dark:text-gray-200 font-semibold px-4 py-2 rounded-xl text-sm transition-all duration-300 border border-gray-200 dark:border-gray-600 disabled:opacity-50 inline-flex items-center gap-2\"\r\n              >\r\n                <FontAwesomeIcon icon={faSync} className={isRefreshing ? 'animate-spin' : ''} />\r\n                Refresh\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Search and Filter Card */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 p-6 shadow-lg mb-8\">\r\n          <div className=\"grid gap-6 md:grid-cols-2\">\r\n            <div>\r\n              <div className=\"relative\">\r\n                <FontAwesomeIcon icon={faSearch} className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-800 dark:text-gray-200 text-sm\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search students by name, email, or roll number...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  className=\"w-full pl-10 pr-3 py-3 rounded-xl border border-gray-200 dark:border-gray-600 focus:ring-2 focus:ring-primary focus:border-primary transition-all duration-200 text-sm bg-gray-50 dark:bg-gray-700 text-gray-950 dark:text-white placeholder:text-gray-800 dark:placeholder:text-gray-200\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <select\r\n                value={sortOption}\r\n                onChange={(e) => setSortOption(e.target.value)}\r\n                className=\"w-full px-3 py-3 rounded-xl border border-gray-200 dark:border-gray-600 focus:ring-2 focus:ring-primary focus:border-primary transition-all duration-200 text-sm bg-gray-50 dark:bg-gray-700 text-gray-950 dark:text-white\"\r\n              >\r\n                <option value=\"name\">Sort by Name</option>\r\n                <option value=\"rollNo\">Sort by Roll No</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Student Cards Grid */}\r\n        <section className=\"grid gap-6 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3\">\r\n          {filteredStudents.map((student, index) => (\r\n            <div\r\n              key={student.id}\r\n              className=\"group bg-white dark:bg-gray-800 rounded-2xl border border-gray-200 dark:border-gray-700 p-6 shadow-lg hover:shadow-xl transition-all duration-300 animate-fade-in cursor-pointer hover:-translate-y-1\"\r\n              style={{ animationDelay: `${index * 50}ms` }}\r\n              onClick={() => navigate(`/students/${student.year || 'II'}/${student.section || 'A'}/${student.id}`)}\r\n            >\r\n              <div className=\"flex items-start justify-between mb-4\">\r\n                <div className=\"w-12 h-12 rounded-xl bg-gradient-to-br from-green-500 to-green-600 text-white flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300\">\r\n                  <FontAwesomeIcon icon={faUserGraduate} className=\"text-lg\" />\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <FontAwesomeIcon icon={faArrowRight} className=\"text-gray-800 dark:text-gray-200 text-sm group-hover:text-primary transition-colors\"/>\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <h3 className=\"text-lg font-bold text-gray-950 dark:text-white mb-3 group-hover:text-secondary transition-colors truncate\">{student.name || 'Unknown'}</h3>\r\n                <p className=\"text-gray-800 dark:text-gray-200 mb-4 text-sm leading-relaxed\">{student.rollNo || 'N/A'}</p>\r\n              </div>\r\n              \r\n              <div className=\"space-y-3 mb-4\">\r\n                <div className=\"flex items-center gap-2 text-sm text-gray-800 dark:text-gray-200\">\r\n                  <FontAwesomeIcon icon={faEnvelope} className=\"text-primary text-sm\" />\r\n                  <span className=\"truncate\">{student.email || 'No email'}</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2 text-sm text-gray-800 dark:text-gray-200\">\r\n                  <FontAwesomeIcon icon={faIdCard} className=\"text-primary text-sm\" />\r\n                  <span>{student.rollNo || 'No Roll No'}</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2 text-sm text-gray-800 dark:text-gray-200\">\r\n                  <FontAwesomeIcon icon={faGraduationCap} className=\"text-primary text-sm\" />\r\n                  <span>{student.year || 'N/A'}-{student.section || 'N/A'}</span>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Enrolled Courses Section */}\r\n              {student.enrolledCourses && student.enrolledCourses.length > 0 && (\r\n                <div className=\"mb-4\">\r\n                  <div className=\"flex items-center gap-2 mb-2\">\r\n                    <FontAwesomeIcon icon={faChalkboardTeacher} className=\"text-blue-600 dark:text-blue-400 text-xs\" />\r\n                    <span className=\"text-xs font-medium text-gray-800 dark:text-gray-200\">Enrolled in Your Courses:</span>\r\n                  </div>\r\n                  <div className=\"space-y-2\">\r\n                    {student.enrolledCourses.slice(0, 2).map((course, courseIndex) => (\r\n                      <div key={courseIndex} className=\"bg-blue-50 dark:bg-blue-900/20 rounded-lg px-3 py-2 border border-blue-200 dark:border-blue-700\">\r\n                        <div className=\"text-xs font-medium text-blue-800 dark:text-blue-300\">{course.courseName}</div>\r\n                        <div className=\"text-xs text-blue-600 dark:text-blue-400\">\r\n                          {course.courseCode} ‚Ä¢ {course.section} ‚Ä¢ {course.semester} sem\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                    {student.enrolledCourses.length > 2 && (\r\n                      <div className=\"text-xs text-gray-600 dark:text-gray-400 text-center\">\r\n                        +{student.enrolledCourses.length - 2} more course{student.enrolledCourses.length - 2 !== 1 ? 's' : ''}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"flex flex-wrap gap-2 mb-4\">\r\n                <span className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-300 border border-green-200 dark:border-green-700\">\r\n                  <FontAwesomeIcon icon={faCheckCircle} className=\"mr-2\"/>\r\n                  Active\r\n                </span>\r\n                <span className=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-300 border border-purple-200 dark:border-purple-700\">\r\n                  {student.year || 'N/A'}-{student.section || 'N/A'}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"flex justify-end\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={(e) => { e.stopPropagation(); navigate(`/students/${student.year || 'II'}/${student.section || 'A'}/${student.id}`); }}\r\n                  className=\"inline-flex items-center gap-1.5 text-primary hover:text-secondary font-medium transition-all text-sm\"\r\n                >\r\n                  View Details\r\n                  <FontAwesomeIcon icon={faArrowRight} className=\"transition-transform group-hover:translate-x-1\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </section>\r\n\r\n        {filteredStudents.length === 0 && !loading && (\r\n          <div className=\"text-center py-16\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg p-12 border border-gray-200 dark:border-gray-700\">\r\n              <FontAwesomeIcon icon={faUsers} className=\"text-blue-600 dark:text-blue-400 text-6xl mb-6\" />\r\n              <h3 className=\"text-2xl font-semibold text-gray-950 dark:text-white mb-3\">No students found</h3>\r\n              <p className=\"text-gray-800 dark:text-gray-200 text-lg\">Try adjusting your search or filter criteria.</p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentList;\r\n\r\n"],"names":["CACHE_KEY","CACHE_TIMESTAMP_KEY","CACHE_DURATION","StudentList","students","setStudents","useState","searchTerm","setSearchTerm","sortOption","setSortOption","loading","setLoading","error","setError","isRefreshing","setIsRefreshing","loadTime","setLoadTime","facultyData","setFacultyData","instructorCourses","setInstructorCourses","showCourseDetails","setShowCourseDetails","navigate","useNavigate","useRef","dataFetched","getCachedData","useCallback","cached","timestamp","parsed","fetchDataUltraFast","user","startTime","facultyRef","doc","db","facultySnap","getDoc","instructorId","instructorCourseList","courseDetailsQuery","collectionGroup","courseDetailsSnap","getDocs","courseDoc","courseData","courseId","allStudentIds","courseStudentMap","course","section","studentIds","studentId","uniqueStudentIds","uniqueStudentIdsSet","fetchedStudents","studentPaths","pathSegments","studentsRef","collection","studentsSnap","instructorStudents","student","allStudents","useEffect","cachedData","unsubscribe","onAuthStateChanged","auth","filteredStudents","useMemo","base","term","a","b","handleRefresh","jsxs","jsx","_","i","FontAwesomeIcon","faExclamationTriangle","faSync","faChalkboardTeacher","faArrowLeft","faArrowRight","index","faBookOpen","faGraduationCap","faClock","faUsers","faBuilding","faUserGraduate","faSearch","e","faEnvelope","faIdCard","courseIndex","faCheckCircle"],"mappings":"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"}